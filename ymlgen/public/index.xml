<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A test config to generate mkdocs.yml frontmatter using Hugo&#39;s templating engine</title>
    <link>http://wiki.seeed.cc/index.xml</link>
    <description>Recent content on A test config to generate mkdocs.yml frontmatter using Hugo&#39;s templating engine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://wiki.seeed.cc/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title></title>
      <link>http://wiki.seeed.cc/How_to_choos_A_Gas_Sensor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/How_to_choos_A_Gas_Sensor/</guid>
      <description>

&lt;h1 id=&#34;how-to-choose-a-gas-sensor&#34;&gt;How to Choose A Gas Sensor&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;title: How to Choose A Gas Sensor
category: Tutorial
oldwikiname:  How to Choose A Gas Sensor
prodimagename:&lt;/p&gt;

&lt;h2 id=&#34;surveyurl-https-www-research-net-r-how-to-choose-a-gas-sensor&#34;&gt;surveyurl: &lt;a href=&#34;https://www.research.net/r/How_to_Choose_A_Gas_Sensor&#34;&gt;https://www.research.net/r/How_to_Choose_A_Gas_Sensor&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;If you search “gas sensor” on &lt;a href=&#34;http://www.seeedstudio.com&#34;&gt;www.seeedstudio.com&lt;/a&gt; , you can find a lot of gas sensor. We know that the air component is diverse, and a certain gas sensor can detect one or more air components, so we designed a series of gas sensor.&lt;/p&gt;

&lt;p&gt;There are about 10 kind of gas sensor for sale. They have similar name, it’s likely to cause confusion. Hope that through the following presentation, we can help you to choose the appropriate gas sensor easily.&lt;/p&gt;

&lt;p&gt;It’s obvious that different sensor can detect the same gas. Such as MQ-2, MQ-3, MQ-5 Alcohol Sensor, Grove – HCHO Sensor can detect Alcohol. So if you want an alcohol sensor, then which on should you chosen? Although most of the above sensors are able to detect Alcohol, but you should know that they have different range to Alcohol.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/How_to_choos_A_Gas_Sensor/raw/master/img/Gas_line_1.png&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And sometimes, we want to test many gases in one sensor, so how should we choose it ?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/How_to_choos_A_Gas_Sensor/raw/master/img/Gas_line_2.png&#34; alt=&#34;&#34; /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Following is the link of all gases to Bazaar, choose the one you needed!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-gas-sensormq2-p-937.html?cPath=25_27&#34;&gt;Grove - Gas Sensor(MQ-2)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-gas-sensormq3-p-1418.html?cPath=25_27&#34;&gt;Grove - Gas Sensor(MQ-3)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-gas-sensormq5-p-938.html?cPath=25_27&#34;&gt;Grove - Gas Sensor(MQ-5)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-gas-sensormq9-p-1419.html?cPath=25_27&#34;&gt;Grove - Gas Sensor(MQ-9)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-gas-sensoro2-p-1541.html?cPath=25_27&#34;&gt;Grove - Gas Sensor(O2)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-hcho-sensor-p-1593.html?cPath=25_27&#34;&gt;Grove - HCHO Sensor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/grove-alcohol-sensor-p-764.html?cPath=25_27&#34;&gt;Grove - Alcohol Sensor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/Grove-CO2-Sensor-p-1863.html&#34;&gt;Grove - CO2 Sensor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/Grove-Multichannel-Gas-Sensor-p-2502.html&#34;&gt;Grove - Multichannel Gas Sensor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/Grove-Dust-Sensor-p-1050.html&#34;&gt;Grove - Dust Sensor&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://wiki.seeed.cc/Project_Three-Analog_Input/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/Project_Three-Analog_Input/</guid>
      <description>

&lt;h1 id=&#34;project-three-analog-input&#34;&gt;Project Three – Analog Input&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;title: Project Three – Analog Input
category: Tutorial
oldwikiname:  Project Two – Digital Input
prodimagename:&lt;/p&gt;

&lt;h2 id=&#34;surveyurl-https-www-research-net-r-project-two-digital-input&#34;&gt;surveyurl: &lt;a href=&#34;https://www.research.net/r/Project_Two-Digital_Input&#34;&gt;https://www.research.net/r/Project_Two-Digital_Input&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;The purpose of this sketch is to demonstrate a form of analog input using the potentiometer . We will use this to set the delay for our blinking LEDs from project one.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wiring it:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Connect the LED to the D1/D2 Digital I/O jack, like it was in Projects 1 and 2.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arduino Pin D1 powers the Red LED on the Grove&amp;rsquo;s D1 connector, and Arduino Pin D2 powers the Green LED on the Grove&amp;rsquo;s D2 connector.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Connect the Potentiometer to the Analog A0/A1 input jack.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The Potentiometer produces an analog voltage on its D1 output, which is connected to Arduino A0 analog input on the A0/A1 input jack.
&lt;img src=&#34;https://github.com/SeeedDocument/Project_Three-Analog_Input/raw/master/img/Conn-three.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Now upload the following Arduino sketch:&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// Project Three - Analog Input
//

void setup()
{
    pinMode(1, OUTPUT);
    pinMode(2, OUTPUT);
}

void loop()
{
    digitalWrite(1, HIGH);
    digitalWrite(2, LOW);
    delay(analogRead(0));
    digitalWrite(1, LOW);
    digitalWrite(2, HIGH);
    delay(analogRead(0));
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The maximum delay value is 1023, as this is the upper limit of the value returned by the analogRead() function. You could use mathematical functions to increase or scale down the range of the delay.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://wiki.seeed.cc/README/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/README/</guid>
      <description>

&lt;h1 id=&#34;uf0&#34;&gt;UF0&lt;/h1&gt;

&lt;p&gt;SKU: 102990172&lt;/p&gt;

&lt;p&gt;Change Log:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2016-12-28: create repos by Jeremy (Jeremy.xiao@seeed.cc)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;about-seeed&#34;&gt;About Seeed&lt;/h2&gt;

&lt;p&gt;Seeed is a hardware innovation platform for makers to grow inspirations into differentiating products. By working closely with technology providers of all scale, Seeed provides accessible technologies with quality, speed and supply chain knowledge. When prototypes are ready to iterate, Seeed helps productize 1 to 1,000 pcs using in-house engineering, supply chain management and agile manufacture forces. Seeed also team up with incubators, Chinese tech ecosystem, investors and distribution channels to portal Maker startups beyond.&lt;/p&gt;

&lt;h2 id=&#34;contribution&#34;&gt;Contribution&lt;/h2&gt;

&lt;p&gt;We warmly welcome contribution to this documentation project. You can do this basically by &lt;a href=&#34;https://help.github.com/articles/fork-a-repo&#34;&gt;forking&lt;/a&gt;, committing modifications and then &lt;a href=&#34;https://help.github.com/articles/using-pull-requests&#34;&gt;pulling requests&lt;/a&gt; (follow the links above for operating guide). Adding change log and your contact into file header is encouraged. Thanks for your contribution.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;LICENSE&lt;/h2&gt;

&lt;p&gt;Copyright &amp;copy; 2008-2016 Seeed Development Limited (www.seeedstudio.com / www.seeed.cc)&lt;/p&gt;

&lt;h3 id=&#34;documents-and-images&#34;&gt;Documents and Images&lt;/h3&gt;

&lt;p&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
This work (product documents and associated images) are licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International License&lt;/a&gt;. &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-sa/4.0/&#34;&gt; &lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;software-library&#34;&gt;Software Library&lt;/h3&gt;

&lt;p&gt;All demo software, code examples embedded in the document and any software libraray provided with the product document are licensed under &lt;a href=&#34;https://github.com/SeeedDoc/WikiMigrationSync/blob/master/MIT_LICENSE&#34; title=&#34;MIT LICENSE&#34;&gt;MIT License&lt;/a&gt; unless otherwise specified.&lt;/p&gt;

&lt;h3 id=&#34;thirdparty-content&#34;&gt;Thirdparty content&lt;/h3&gt;

&lt;p&gt;The resources provided with the product documents also contains datasheets, software examples and other content copyrighted by 3rd party authors and companies. All such items are copyright of respective owners. The use of such items are governed by their respective licenses.&lt;/p&gt;

&lt;p&gt;All trademarks are the property of their respective owners.&lt;/p&gt;

&lt;h3 id=&#34;to-contact&#34;&gt;To Contact&lt;/h3&gt;

&lt;p&gt;Write to us at &lt;img src=&#34;contact-us.png&#34; alt=&#34;&#34; /&gt; with subject line &amp;ldquo;Wiki&amp;rdquo;. Thanks&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>0.5w Solar Panel 55*70</title>
      <link>http://wiki.seeed.cc/0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/0/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://bz.seeedstudio.com/depot/images/product/solars.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a custom solar panel, which mates directly with many of our development boards and has a high efficiency at 17%. Unit has a clear epoxy coating with hard-board backing. Robust sealing for out door applications!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/Skeleton-Box-p-1407.html&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;hr /&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;th&gt; PET
&lt;/th&gt;
&lt;th&gt; Package
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&#34;400px&#34;&gt; Typical peak power
&lt;/td&gt;
&lt;td width=&#34;400px&#34;&gt; 0.55W
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Voltage at peak power
&lt;/td&gt;
&lt;td&gt; 5.5v
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Current at peak power
&lt;/td&gt;
&lt;td&gt;100mA
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Length
&lt;/td&gt;
&lt;td&gt;70 mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Width
&lt;/td&gt;
&lt;td&gt;55 mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Depth
&lt;/td&gt;
&lt;td&gt;1.5 mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weight
&lt;/td&gt;
&lt;td&gt;17g
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Efficiency
&lt;/td&gt;
&lt;td&gt;17%
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wire diameter
&lt;/td&gt;
&lt;td&gt;1.5mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Connector
&lt;/td&gt;
&lt;td&gt;2.0mm JST
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&#34;hardware-installation&#34;&gt;Hardware Installation&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/0.5w_Solar_Panel_55x70/raw/master/img/0.5wsolarpanel.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/1w_Solar_Panel_75x100&#34; title=&#34;1w Solar Panel 75*100&#34;&gt;1w Solar Panel 75*100&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/1.5W_Solar_Panel_81x137&#34; title=&#34;1.5W Solar Panel 81*137&#34;&gt;1.5W Solar Panel 81*137&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/2.5W_Solar_Panel_116x160&#34; title=&#34;2.5W Solar Panel 116*160&#34;&gt;2.5W Solar Panel 116*160&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/3W_Solar_Panel_138x160&#34; title=&#34;3W Solar Panel 138*160&#34;&gt;3W Solar Panel 138*160&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1.5W Solar Panel 81*137</title>
      <link>http://wiki.seeed.cc/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/1/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/1.5W_Solar_Panel_81x137/raw/master/img/1.5W.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a custom solar panel, which mates directly with many of our development boards and has a high efficiency at 16%. Unit has a clear epoxy coating with hard-board backing. Robust sealing for out door applications!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/1.5W-Solar-Panel-81X137-p-952.html&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PCB size : 137*81*1.5 mm&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Monolithic : 78*11.14 mm&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Efficiency : 16%&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Voltage:5.5V;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Current:270mA&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Power:1.5W&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Connector: 2.0mm JST&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type:156 Two line;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PCB Material : all Glass fiber&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PCB requirements : positive&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Quality requirements :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flatness less than 0.1mm&lt;/li&gt;
&lt;li&gt;clean, does not allow to have the scratch&lt;/li&gt;
&lt;li&gt;take off paint the phenomenon, such as a hole does not allow to have the deviation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : tolerance Positive and negative 0.1mm&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Name: PET laminated (1137*81)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arrangement:1*11(series)NO spacing posted artical black;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>125Khz RFID module - UART</title>
      <link>http://wiki.seeed.cc/125Khz_RFID_module-UART/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/125Khz_RFID_module-UART/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://bz.seeedstudio.com/depot/images/product/P1240147.jpg&#34; alt=&#34;http://www.seeedstudio.com/depot/images/product/P1240147.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;RDM 125KHz card mini-module is designed for reading code from 125KHz card compatible read-only tags and read/write card . It can be applied in office/home security, personal identification, access control, anti-forgery, interactive toy and production control systems etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.research.net/r/125Khz_RFID_module-UART&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Module will notify whenever 125khz tag approaches, tag serial number will be send via TX pin. Easy way for a RFID module on MCU projects or PC connnection via UartSB.&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Support external antenna&lt;/li&gt;
&lt;li&gt;Maximum effective distance up to 50mm&lt;/li&gt;
&lt;li&gt;Less than 100ms decoding time&lt;/li&gt;
&lt;li&gt;UART TTL interface&lt;/li&gt;
&lt;li&gt;Support EM4100 compatible read only or read/write tags&lt;/li&gt;
&lt;li&gt;Built-in external bi-color LED and buzzer driver&lt;/li&gt;
&lt;li&gt;Small outline design&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;p&gt;May include key specification and other specifications.&lt;/p&gt;

&lt;h3 id=&#34;key-specification&#34;&gt;Key Specification&lt;/h3&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td width=&#34;300px&#34;&gt; Frequency
&lt;/td&gt;
&lt;td width=&#34;500px&#34;&gt; 125KHz
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Baud Rate
&lt;/td&gt;
&lt;td&gt; 9600 (TTL Electricity Level RS232 format)
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; interface
&lt;/td&gt;
&lt;td&gt; Weigang26 Or TTL Electricity Level RS232 format
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Power supply
&lt;/td&gt;
&lt;td&gt; DC 5V（±5%）
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Current
&lt;/td&gt;
&lt;td&gt; &amp;lt;50Ma
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Operating range
&lt;/td&gt;
&lt;td&gt; &amp;gt;50mm(Depend on Card/Tag shape, manufacturer)
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Expand I/O port
&lt;/td&gt;
&lt;td&gt; N/A
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Indication light
&lt;/td&gt;
&lt;td&gt; N/A
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Working temperature
&lt;/td&gt;
&lt;td&gt; -10℃~ +70℃
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Storage temperature
&lt;/td&gt;
&lt;td&gt; -20℃~ +80℃
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Max. humidity
&lt;/td&gt;
&lt;td&gt; Relative humidity 0 ~ 95%
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Size
&lt;/td&gt;
&lt;td&gt; 38.5mm ×19mm×9mm
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&#34;pin-definition-and-rating&#34;&gt;Pin definition and Rating&lt;/h2&gt;

&lt;p&gt;Look the image below(Mechanic Dimensions), and check the pin definition list here:&lt;/p&gt;

&lt;pre&gt; Pin Definition :
 P1:
   PIN1    TX
   PIN2    RX
   PIN3
   PIN4    GND
   PIN5    +5V(DC)
 P2:
   PIN1    ANT1
   PIN2    ANT2
 P3:
   PIN1    LED
   PIN2    +5V(DC)
   PIN3    GND
&lt;/pre&gt;

&lt;h2 id=&#34;mechanic-dimensions&#34;&gt;Mechanic Dimensions&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/125Khz_RFID_module-UART/raw/master/img/RFID-wiegand-dimen.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;h3 id=&#34;ttl-interface-rs232-data-output-format&#34;&gt;TTL Interface RS232 Data output format&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;9600bps,N,8,1&lt;/li&gt;
&lt;li&gt;CHECKSUM: card 10byte DATA entire do XOR operation
&lt;table&gt;
&lt;tr&gt;
&lt;td width=&#34;100px&#34;&gt; 02
&lt;/td&gt;
&lt;td width=&#34;300px&#34;&gt; 10ASCII Data Characters
&lt;/td&gt;
&lt;td width=&#34;100px&#34;&gt; Chechsum
&lt;/td&gt;
&lt;td width=&#34;100px&#34;&gt; 03
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Example: card number: 62E3086CED&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Output data:36H、32H、45H、33H、30H、38H、36H、43H、45H、44H&lt;/li&gt;
&lt;li&gt;CHECKSUM: (62H) XOR (E3H) XOR (08H) XOR (6CH) XOR (EDH)=08H&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;time-sequence-chart&#34;&gt;Time sequence chart&lt;/h4&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/125Khz_RFID_module-UART/raw/master/img/RFID-wiegand-time-seq.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;exampel&#34;&gt;Exampel&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/125Khz_RFID_module-UART/raw/master/img/125k_RFID_uasge.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Output date(HEX): 02 | 30 31 30 30 30 37 33 34 45 30 | 44 32 | 03
-&amp;gt;Change to Decimal
CardNumber Decimal: 48 49 48 48 48 55 51 52 69 48
CheckSum Decimal: 68 50
-&amp;gt;Refer to ASCII table,get Ascill value
CardNumber Ascill: 0 1 0 0 0 7 3 4 E 0
CheckSum Ascill : D 2
(01H) xor (00H) xor (07H) xor (34H) xor (E0H) = D2H&lt;/p&gt;

&lt;h3 id=&#34;programming&#34;&gt;Programming&lt;/h3&gt;

&lt;p&gt;Connect RX/TX to Arduino UART port , Uart demo code :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void setup()
{
  Serial.begin(9600);
}
void loop()
{
  if(Serial.available())
  {
    while(Serial.available())
    Serial.write(Serial.read());
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Datasheet: &lt;a href=&#34;https://github.com/SeeedDocument/125Khz_RFID_module-UART/raw/master/res/RDM630-Spec.pdf&#34;&gt;RDM630-Spec.pdf&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.instructables.com/id/Arduino-and-RFID-from-seeedstudio/&#34;&gt;How to connect Arduino and RFID&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>13.56Mhz RFID module - IOS/IEC 14443 type a</title>
      <link>http://wiki.seeed.cc/13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/13/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/raw/master/img/13563.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Model No.  RDM880-T-A&lt;/li&gt;
&lt;li&gt;R/W chip  MFRC500，MFRC400，MFRC531，MFRC632&lt;/li&gt;
&lt;li&gt;Standard  ISO/IEC 14443 type a&lt;/li&gt;
&lt;li&gt;Frequency  13.56MHz&lt;/li&gt;
&lt;li&gt;Baud Rate  9600-115200bit/s（configurable, default9600）&lt;/li&gt;
&lt;li&gt;Power supply  DC5V(5%)&lt;/li&gt;
&lt;li&gt;Current  &amp;lt;70mA&lt;/li&gt;
&lt;li&gt;Operating range 30-100mm（reading range depend on antenna and card/tag）&lt;/li&gt;
&lt;li&gt;interface  TTL electrical level&lt;/li&gt;
&lt;li&gt;Working temperature -10 degree to 70 degree&lt;/li&gt;
&lt;li&gt;Storage temperature -20 degree to 80 degree&lt;/li&gt;
&lt;li&gt;Size  39*19*9 mm（DIP28）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;external-links&#34;&gt;External Links&lt;/h2&gt;

&lt;p&gt;Links to external webpages which provide more application ideas, documents/datasheet or software libraries.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Basic example, use the RDM880 with a buspirate: &lt;a href=&#34;http://neophob.com/2010/03/bus-pirate-fun-rdm880-rfid-module/&#34;&gt;http://neophob.com/2010/03/bus-pirate-fun-rdm880-rfid-module/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Python library to access the RDM880 &lt;a href=&#34;https://github.com/synack/rfid&#34;&gt;https://github.com/synack/rfid&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Maker&amp;rsquo;s site &lt;a href=&#34;http://www.datarfid.com/doce/Product/pic_69.html&#34;&gt;http://www.datarfid.com/doce/Product/pic_69.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://eduardovelloso.com/2011/11/22/rfid-part-iii-high-frequency-tutorial/&#34;&gt;Eduardo Velloso&amp;rsquo;blog&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;connecting-to-an-arduino&#34;&gt;Connecting to an Arduino&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;The SeeedStudio 13.56Mhz RFID module is an RFID reader capable support ISO14443A, Mifare series card over a serial line. It can easely be attached
to an arduino to have RFID fun.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Schematics&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;       .-----------------------------.
       | [1][2]      [5][4][3][2][1] |
       |  J3              J1         |
       |           RDM880 (top view) |
       |                  J2         |
       |             [5][4][3][2][1] |
       .-----------------------------.
&lt;/pre&gt;
&lt;pre&gt;J1:(accessory pins)
  PIN 1 -- LEDG (Green led)
  PIN 2 -- 5V (DC)
  PIN 3 -- GND
  PIN 4 -- LEDR (Red led)
  PIN 5 -- BUZ (Buzzer)
&lt;/pre&gt;

&lt;p&gt;J1 Alt: Note that some units are arranged:&lt;/p&gt;

&lt;pre&gt;  PIN 1 --
  PIN 2 --
  PIN 3 -- LED1 (Green led)
  PIN 4 -- LED2 (RED led)
  PIN 5 -- BUZ (Buzzer)
&lt;/pre&gt;

&lt;pre&gt;J2:(Communication using serial 9600 8N1 TTL level)
  PIN 1 -- RESET (pull low to reset e.g. set default baudrate)
  PIN 2 -- RX
  PIN 3 -- TX
  PIN 4 -- GND
  PIN 5 -- 5V (in)

J3:
  PIN 1 -- + Antenna
  PIN 2 -- - Antenna
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Connecting to an Arduino&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use the J2 pin headers to connect 5 volt and the ground as shown in the picture. Connect the TX (Pin 3) to the Arduino digital pin 2 and RX to digital pin 3 as shown bellow. It is not needed to connect the reset as long as you don&amp;rsquo;t change the default connection speed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/raw/master/img/Rdm880_bb.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;[&lt;a href=&#34;https://www.google.com.hk/url?sa=t&amp;amp;amp;rct=j&amp;amp;amp;q=&amp;amp;amp;esrc=s&amp;amp;amp;source=web&amp;amp;amp;cd=1&amp;amp;amp;ved=0CCwQFjAA&amp;amp;amp;url=%68%74%74%70%3a%2f%2f%6e%65%6f%70%68%6f%62%2e%63%6f%6d%2f%66%69%6c%65%73%2f%72%66%69%64%2f%50%52%4f%54%4f%43%4f%4c%2d%38%32%31%2d%38%38%30%25%32%30%5f%32%5f%2e%70%64%66&amp;amp;amp;ei=NB4LUcEWicCJB7ylgKAO&amp;amp;amp;usg=AFQjCNExnbUz8nALfcRhj0I4z6tBZqgH9w&amp;amp;amp;bvm=bv.41867550,d.aGc&amp;amp;amp;cad=rjt&#34;&gt;PROTOCOL-821-880&lt;em&gt;2&lt;/em&gt;.pdf&lt;/a&gt;] describes the protocol used for now we only created a small program to read the RDIF tag number when pressing enter in the Serial monitor of the Arduino IDE&lt;/p&gt;

&lt;p&gt;Warning: when writing your sketches use &lt;strong&gt;only&lt;/strong&gt; system, Type-A and Mifare commands. ISO14443-B and ISO15693 are accepted only by RDM880-T-&lt;strong&gt;E&lt;/strong&gt; (not &amp;lsquo;A&amp;rsquo;) reader! And as of today (21 may, 2012) remember that this module &lt;strong&gt;does not support&lt;/strong&gt; anticollision for Mifare cards &amp;ndash; sometimes it tells there&amp;rsquo;s more than one card, but there&amp;rsquo;s no way to address the non-default card. It&amp;rsquo;s a firmware issue, confirmed by manufacturer.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#include &amp;lt;SoftwareSerial.h&amp;gt;

SoftwareSerial mySerial(2, 3);
char txrxbuffer[255];

char get_readID[] = { 0xAA , 0x00, 0x03, 0x25, 0x26, 0x00, 0x00, 0xBB };
void setup()
{
    Serial.begin(57600);
    Serial.println(&amp;quot;Hit Enter to read the RFID number&amp;quot;);
    mySerial.begin(9600);
}

void loop() // run over and over
{

    int counter = 0;
    if (mySerial.available())
    Serial.print(mySerial.read(),HEX);

    if (Serial.available()){
        Serial.read();
        Serial.println(&amp;quot;&amp;gt;&amp;quot;);
        for (counter =0 ; counter &amp;lt; 8 ; counter++){
            mySerial.write(get_readID[counter]);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;resource&#34;&gt;Resource&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeeedDocument/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/raw/master/res/RDM880-Spec.pdf&#34;&gt;RDM880 Document&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeeedDocument/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/raw/master/res/RDM880_LED_Control.doc&#34;&gt;RDM880 LED Control.doc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeeedDocument/13.56Mhz_RFID_module-IOS-IEC_14443_type_a/raw/master/res/API_and_Demo_Code_on_Windows_and_Linux_for13.56M_RFID_Reader.zip&#34;&gt;API and Demo Code on Windows and Linux for13.56M RFID Reader&lt;/a&gt; (download this tools if you want to write data to your tag)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>1w Solar Panel 80*100</title>
      <link>http://wiki.seeed.cc/1w_Solar_Panel_80x100/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/1w_Solar_Panel_80x100/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://bz.seeedstudio.com/depot/images/product/solarb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a custom solar panel, which mates directly with many of our development boards and has a high efficiency at 15.5%. Unit has a clear epoxy coating with hard-board backing. Robust sealing for out door applications!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/1w-solar-panel-75x100-p-633.html?cPath=155&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;key-specification&#34;&gt;Key Specification&lt;/h2&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;th&gt;PET
&lt;/th&gt;
&lt;th&gt;package
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&#34;400px&#34;&gt;Typical peak power
&lt;/td&gt;
&lt;td width=&#34;400px&#34;&gt;0.935W
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Voltage at peak power
&lt;/td&gt;
&lt;td&gt;5.5v
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Current at peak power
&lt;/td&gt;
&lt;td&gt;170mA
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Length
&lt;/td&gt;
&lt;td&gt;100 mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Width
&lt;/td&gt;
&lt;td&gt;75 mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Depth
&lt;/td&gt;
&lt;td&gt;1.5 mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weight
&lt;/td&gt;
&lt;td&gt;33g
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Efficiency
&lt;/td&gt;
&lt;td&gt;15.5%
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; Wire diameter
&lt;/td&gt;
&lt;td&gt; 1.5mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; connector
&lt;/td&gt;
&lt;td&gt; 2.0mm JST
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&#34;see-also&#34;&gt;See Also&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/0.5w_Solar_Panel_55x70&#34; title=&#34;0.5w Solar Panel 55*70&#34;&gt;0.5w Solar Panel 55*70&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/1.5W_Solar_Panel_81x137&#34; title=&#34;1.5W Solar Panel 81*137&#34;&gt;1.5W Solar Panel 81*137&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/2.5W_Solar_Panel_116x160&#34; title=&#34;2.5W Solar Panel 116*160&#34;&gt;2.5W Solar Panel 116*160&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://wiki.seeed.cc/3W_Solar_Panel_138x160&#34; title=&#34;3W Solar Panel 138*160&#34;&gt;3W Solar Panel 138*160&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2.5W Solar Panel 116*160</title>
      <link>http://wiki.seeed.cc/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/2/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2.5W_Solar_Panel_116x160/raw/master/img/2.5W.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a custom solar panel, which mates directly with many of our development boards and has a high efficiency at 15%. Unit has a clear epoxy coating with hard-board backing. Robust sealing for out door applications!&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/2.5W-Solar-Panel-116X160-p-953.html&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PCB size : 116*160*1.5 mm&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Monolithic : 9.57*156 mm&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Efficiency : 15%&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Voltage:5.5V;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Current:450mA&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Power:2.5W&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Connector: 2.0mm JST&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type:156 Two line;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PCB Material : all Glass fiber&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;PCB requirements : positive&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Quality requirements :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;flatness less than 0.1mm&lt;/li&gt;
&lt;li&gt;clean, does not allow to have the scratch&lt;/li&gt;
&lt;li&gt;take off paint the phenomenon, such as a hole does not allow to have the deviation&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : tolerance Positive and negative 0.1mm&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Name: PET laminated (116*160)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Arrangement:1*11(series)NO spacing posted artical black;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2.8&#39;&#39; TFT Touch Shield v2.0</title>
      <link>http://wiki.seeed.cc/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/2/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/main.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/p&gt;

&lt;p&gt;TFT Touch Shield V2.0 is a resistive touch screen, compatible with Arduino/Seeeduino/Arduino Mega platforms. It can be used as display device or sketch pad. Compared with the previous version, 2.8&amp;rdquo;TFT Touch Shield V1.0, we upgraded the screen driver to a more professional chip, ILI9341 driver, providing different pin-saving SPI communication without sacrificing the data transmitting speed. Due to the communication method change, programs developed for the original version are needed for modification before being transplanted to the new version. With a SD card module integrated on this shield, this shield reserves capability for other expansions of your project.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/2.8-TFT-Touch-Shield-V2.0-p-1286.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Seeed-WiKi/master/docs/images/get_one_now.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Big screen with easy and comfortable experience&lt;/li&gt;
&lt;li&gt;Backlight controllable via programming&lt;/li&gt;
&lt;li&gt;65k rich colors display&lt;/li&gt;
&lt;li&gt;SPI pin-saving communication method&lt;/li&gt;
&lt;li&gt;Full screen touch active range&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Working Voltage&lt;/td&gt;
&lt;td&gt;5 V&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Resolution&lt;/td&gt;
&lt;td&gt;320 x 240&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Colors&lt;/td&gt;
&lt;td&gt;65k&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;compatibility&#34;&gt;Compatibility&lt;/h2&gt;

&lt;p&gt;We have produced a lot of extension boards that can make your platform board more powerful, however not every extension board is compatible with all the platform boards, here we use a table to illustrate how are those boards compatible with platform board.&lt;/p&gt;

&lt;p&gt;!!!note
    Please note that &amp;ldquo;Not recommended&amp;rdquo; means that it might have chance to work with the platform board however requires extra work such as jump wires or rewriting the code. If you are interested in digging more, welcome to contact with techsupport@seeed.cc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Click to see full picture&lt;/strong&gt;
&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Seeed-WiKi/master/docs/images/Shield%20Compatibility.png&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/Shield%20Compatibility.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;application-ideas&#34;&gt;Application Ideas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Game&lt;/li&gt;
&lt;li&gt;Sensor Hub&lt;/li&gt;
&lt;li&gt;Human Machine Interface&lt;/li&gt;
&lt;li&gt;Smart House&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some awesome projects for your reference. If you have project want to add to this chapter, please feel free to contact loovee@seeed.cc.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Arduino Phone&lt;/th&gt;
&lt;th&gt;Facebook Monitor&lt;/th&gt;
&lt;th&gt;Instrucatbles Monitor&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/project1.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/project2.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/project3.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.instructables.com/id/ArduinoPhone-20-an-Open-Source-Mobile-Phone-Based-/&#34;&gt;Make it Now!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.instructables.com/id/Facebook-Like-Monitor/&#34;&gt;Make it Now!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.instructables.com/id/Make-a-Instructables-Indicator/&#34;&gt;Make it Now!&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;pin-map&#34;&gt;Pin Map&lt;/h2&gt;

&lt;p&gt;!!!Note
    You can use the NOT USED pins to control the others module.&lt;/p&gt;

&lt;p&gt;Digital Pins&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pin Name&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;D0&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D1&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D2&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D3&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D4&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TF_CS&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D5&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TFT_CS&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D6&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TFT_DC&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D7&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;BACKLIGHT(Selectable)&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D8&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D9&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D10&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D11&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SPI_MOSI&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D12&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SPI_MISO&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;D13&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;SPI_SCK&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Analog Pins&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pin Name&lt;/th&gt;
&lt;th&gt;Function&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A0&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TOUCH PANEL&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A1&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TOUCH PANEL&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A2&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TOUCH PANEL&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A3&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;TOUCH PANEL&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A4&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;A5&lt;/td&gt;
&lt;td&gt;NOT USED&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;!!!Note
    This getting started is based on Win10 and Arduino IDE 1.6.9 environment.&lt;/p&gt;

&lt;p&gt;We will show you how this display works, please prepare materials as below to start.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Seeeduino V4&lt;/th&gt;
&lt;th&gt;2.8 TFT Touch Shield V2&lt;/th&gt;
&lt;th&gt;Micro USB Cable&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/gs1.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/gs2.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/gs3.jpg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.seeedstudio.com/Seeeduino-V4.2-p-2517.html&#34;&gt;More Details&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.seeedstudio.com/2.8-TFT-Touch-Shield-V2.0-p-1286.html&#34;&gt;More Details&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.seeedstudio.com/Micro-USB-Cable-48cm-p-1475.html&#34;&gt;More Details&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;###Download Arduino Library&lt;/p&gt;

&lt;p&gt;This library supports below platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arduino/Genuino UNO&lt;/li&gt;
&lt;li&gt;Seeeduino V3/4.0/4.2&lt;/li&gt;
&lt;li&gt;Arduino/Genuino Mega&lt;/li&gt;
&lt;li&gt;Arduino Leonardo&lt;/li&gt;
&lt;li&gt;Seeeduino Lite/Clio/Lotus&lt;/li&gt;
&lt;li&gt;LinkIt ONE(Touch panel does not work)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click on below button to download the library and install it, if you don&amp;rsquo;t know how to install an Arduino library, please refer to the tutorial &lt;a href=&#34;http://wiki.seeed.cc/Tutorial/How_to_Install_an_Arduino_Library/&#34;&gt;(HOW TO INSTALL AN ARDUINO LIBRARY)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/Seeed-Studio/TFT_Touch_Shield_V2/archive/master.zip&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/library.png&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This library includes below examples,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;drawCircle&lt;/li&gt;
&lt;li&gt;drawLines&lt;/li&gt;
&lt;li&gt;drawNumber&lt;/li&gt;
&lt;li&gt;drawRectangle&lt;/li&gt;
&lt;li&gt;paint&lt;/li&gt;
&lt;li&gt;shapes&lt;/li&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;tftbmp&lt;/li&gt;
&lt;li&gt;tftbmp2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use example &amp;lsquo;shapes&amp;rsquo; for this demo.&lt;/p&gt;

&lt;h3 id=&#34;connect-the-cables-and-upload-the-code&#34;&gt;Connect the cables and Upload the code&lt;/h3&gt;

&lt;p&gt;**Step1. **Insert the TFT_Touch_Shield_V2 board to Seeeduino,&lt;/p&gt;

&lt;p&gt;**Step2. **Connect your Seeeduino board to computer with USB cable&lt;/p&gt;

&lt;p&gt;**Step3. **Open Arduino IDE, Select the correct COM port and Boards(in this example we use Seeeduino V4)&lt;/p&gt;

&lt;p&gt;**Step4. **Click on &lt;strong&gt;File &amp;gt; Examples &amp;gt; TFT_Touch_Shield_V2-master &amp;gt; shapes&lt;/strong&gt; to open the code. Upload the example to Seeeduino.
&lt;img src=&#34;https://github.com/SeeedDocument/TFT_Touch_Shield_V2/raw/master/images/shapes%20example.png&#34; alt=&#34;&#34; /&gt;
If you have any question about how to upload the code, please refer &lt;a href=&#34;http://wiki.seeed.cc/Platform/Arduino/SeeeduinoV4.2/#getting-started&#34;&gt;here&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/display.jpeg&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;backlight&#34;&gt;Backlight&lt;/h2&gt;

&lt;p&gt;The backlight is always default on, if you want to change the backlight, you need to do some hacking on the board. Please look at the back side of the board. There&amp;rsquo;s a BACKLIGHT label. One side is named as ON, and the other side is named D7. We need to cut the wire between middle pad and ON pad, solder middle pad with D7 pad. As shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/TFT_Touch_Shield_V2/master/images/backlight.png&#34; alt=&#34;enter image description here&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then you can control the backlight via D7.&lt;/p&gt;

&lt;p&gt;To open backlight:
     digitalWrite(7, HIGH);&lt;/p&gt;

&lt;p&gt;To close backlight:
    digitaWrite(7, LOW);&lt;/p&gt;

&lt;p&gt;!!!Warning
    Please be careful when use a box cutter and soldering iron.&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SeeedDocument/TFT_Touch_Shield_V2/raw/master/resources/TFT_Eagle_File.zip&#34;&gt;Schematic and PCB in Eagle format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SeeedDocument/TFT_Touch_Shield_V2/raw/master/resources/TFT%20Touch.pdf&#34;&gt; Schematic in PDF format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SeeedDocument/TFT_Touch_Shield_V2/raw/master/resources/TFT%20Touch%20PCB.pdf&#34;&gt; PCB in PDF format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Seeed-Studio/TFT_Touch_Shield_V2&#34;&gt;Library at Github page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/SeeedDocument/TFT_Touch_Shield_V2&#34;&gt;Github page of this document&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2.8inch TFT Touch Shield V1.0</title>
      <link>http://wiki.seeed.cc/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/2/</guid>
      <description>

&lt;p&gt;2.8&amp;rdquo; TFT Touch Shield is an Arduino / Arduino Mega compatible multicolored TFT display with a 4-wire resistive touch screen. It includes an Arduino shield compatible footprint for attachment. The TFT driver is based on professional Driver IC and with 8 bit data and 4 bit control interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2.8inch-TFT_Touch_Shield_V1.0/raw/master/img/Tft.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Arduino/Seeeduino, Arduino Mega, and Seeeduino Mega compatible&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;2.8” Size QVGA Display&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Resistive Touch Screen&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;table  cellspacing=&#34;0&#34; width=&#34;80%&#34;&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34;&gt; Item
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Min
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Typical
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Max
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Unit
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Voltage
&lt;/th&gt;
&lt;td&gt;4.5
&lt;/td&gt;
&lt;td&gt;5
&lt;/td&gt;
&lt;td&gt;5.5
&lt;/td&gt;
&lt;td&gt;VDC
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Current
&lt;/th&gt;
&lt;td&gt;/
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;
&lt;td&gt;250
&lt;/td&gt;
&lt;td&gt;mA
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; LCD Panel Size
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 2.8
&lt;/td&gt;
&lt;td&gt;inch
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; View angle
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 60~120
&lt;/td&gt;
&lt;td&gt;Deg
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Resolution
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 320x240
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; LCD color
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 65k
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Backlight Type
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; LED
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; LCD driver IC
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; ST7781R
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Interface Type
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 10±2
&lt;/td&gt;
&lt;td&gt;g
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Interface Type
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; Parallel port ( 8bit Data + 4bit Control )
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Touch Screen
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 4-Wire resistive touch screen
&lt;/td&gt;
&lt;td&gt;/
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Active area
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 43.2*57.3
&lt;/td&gt;
&lt;td&gt;mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; ESD contact discharge
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; ±4
&lt;/td&gt;
&lt;td&gt;KV
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; ESD air discharge
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; ±8
&lt;/td&gt;
&lt;td&gt;KV
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Dimension
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 72.5x54.7x18
&lt;/td&gt;
&lt;td&gt;mm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Weight
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 24±2
&lt;/td&gt;
&lt;td&gt;g
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Cautions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Do not subject the module to mechanical shock or impact by dropping it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Do not apply excessive force to the display surface or the adjoining areas since this may cause the color tone to vary.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pins-usage-on-arduino&#34;&gt;Pins usage on Arduino&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2.8inch-TFT_Touch_Shield_V1.0/raw/master/img/2.8_Inch_TFT_Touch_Shield_Block_Diagram.jpg&#34; alt=&#34;&#34; /&gt;
&lt;strong&gt;D0&lt;/strong&gt; - Unused.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D1&lt;/strong&gt; - Unused.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D2&lt;/strong&gt; - LCD data bit 8.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D3&lt;/strong&gt; - LCD data bit 9.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D4&lt;/strong&gt; - LCD data bit 10.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D5&lt;/strong&gt; - LCD data bit 11.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D6&lt;/strong&gt; - LCD data bit 12.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D7&lt;/strong&gt; - LCD data bit 13.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D8&lt;/strong&gt; - LCD data bit 14.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D9&lt;/strong&gt; - LCD data bit 15.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D10&lt;/strong&gt; - LCD CS pin, active low.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D11&lt;/strong&gt; - LCD RS pin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D12&lt;/strong&gt; - LCD WR pin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D13&lt;/strong&gt; - LCD RD pin.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D14(A0)&lt;/strong&gt; - Touch Screen Y-.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D15(A1)&lt;/strong&gt; - Touch Screen X-.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D16(A2)&lt;/strong&gt; - Touch Screen Y+.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D17(A3)&lt;/strong&gt; - Touch Screen X+.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D18(A4)&lt;/strong&gt; - Unused.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;D19(A5)&lt;/strong&gt; - Unused.&lt;/p&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;h3 id=&#34;hardware-installation&#34;&gt;Hardware Installation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Insert the TFT Touch Shield to Seeeduino as shown below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2.8inch-TFT_Touch_Shield_V1.0/raw/master/img/TFT_Touch_Shield_with_Seeeduino.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;tft-programming&#34;&gt;TFT Programming&lt;/h3&gt;

&lt;p&gt;The &lt;strong&gt;TFT&lt;/strong&gt; library provides the following Application Programming Interfaces(&lt;strong&gt;API&lt;/strong&gt;). The library makes use of direct access to PORT registers instead of Arduino APIs. This is to increase the speed of communication between MCU and TFT. At present, the library supports Arduino, Arduino Mega (1280 or 2560) and Seeeduino ADK Main Board compatible boards. In Mega the 8bit data port of TFT is distributed to different pins belonging to different ports. This decreases the speed of graphics drawing when compared to Arduino. The choice of port pins are purely based on Arduino / Mega port pin arrangement.&lt;/p&gt;

&lt;h3 id=&#34;general-functions&#34;&gt;General Functions&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;paintScreenBlack(void)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The TFT RAM can only be initialized in display-off mode, so this function only for clearing screen with black colour.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;setXY(unsigned int poX, unsigned int poY)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sets the cursor position to (poX,poY). This function is internally used by other graphics APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;setPixel(unsigned int poX, unsigned int poY,unsigned int color)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sets the (poX,poY) pixel to color color. This function is internally used by other graphics APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;lines&#34;&gt;Lines&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;drawLine(unsigned int x0,unsigned int y0,unsigned int x1,unsigned int y1,unsigned int color)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a line from pixel (x0,y0) to pixel (x1,y1) with color color.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;drawVerticalLine(unsigned int poX, unsigned int poY,unsigned int length,unsigned int color&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a Horizontal Line of length length with color color starting from pixel (poX,poY).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;drawHorizontalLine(unsigned int poX, unsigned int poY,unsigned int length,unsigned int color)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a Vertical Line of length length with color color starting from pixel (poX,poY).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rectangle&#34;&gt;Rectangle&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;drawRectangle(unsigned int poX, unsigned int poY, unsigned int length,unsigned int width,unsigned int color)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a rectangle starting from (poX,poY) of length length, width width and color &lt;strong&gt;color&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;fillRectangle(unsigned int poX, unsigned int poY, unsigned int length, unsigned int width, unsigned int color)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a filled rectangle starting from pixel (poX,poY) of length length, width width and color &lt;strong&gt;color&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;circle&#34;&gt;Circle&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;drawCircle(int poX, int poY, int r,unsigned int color)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a circle at (poX,poY) of radius &lt;strong&gt;radius&lt;/strong&gt; and color &lt;strong&gt;color&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;fillCircle(int poX, int poY, int r,unsigned int color&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a filled circle at (poX,poY) of radius &lt;strong&gt;radius&lt;/strong&gt; and color &lt;strong&gt;color&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;text&#34;&gt;Text&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;drawChar(unsigned char ascii,unsigned int poX, unsigned int poY,unsigned int size, unsigned int fgcolor)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a character starting from (poX,poY) using inbuilt font of size &lt;strong&gt;size&lt;/strong&gt; and with color fgcolor. This function is used by drawString() function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;drawString(char *string,unsigned int poX, unsigned int poY,unsigned int size,unsigned int fgcolor)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Draws a string of text starting from (poX,poY) using inbuilt font of size &lt;strong&gt;size&lt;/strong&gt; and with color fgcolor.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;touchscreen-programming&#34;&gt;TouchScreen Programming&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;TFT Touch Shield uses the &lt;a href=&#34;https://github.com/adafruit/Touch-Screen-Library&#34;&gt;Adafruit Touch Screen Library&lt;/a&gt;. To understand the principle behind resistive touch screen refer &lt;a href=&#34;http://wiki.seeedstudio.com/index.php?title=2.8%27%27_TFT_Touch_Shield#External_Links&#34;&gt;External Links&lt;/a&gt;. In short, a 4-wire resistive touch screen provides two voltage divider each for X and Y axis. By applying proper voltages for each axis and scanning the ADC values the position of the touch can be detected. These values are always prone to noise. Hence a digital filter is used.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To use the TouchScreen Library first create a TouchScreen object by&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;
TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where XP, YP, XM and YM are ADC port pins connected to XPlus, YPlus, XMinus and YMinus pins of Touch Screen. 300 is the resistance across X plates.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read the Raw ADC value using&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;
Point p = ts.getPoint();
&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Raw ADC value has to be converted to Pixel Co-ordinates. This is done with map function. This mapping changes for v0.9 and v1.0. The demo applications already takes care of this mapping.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;
p.x = map(p.x, TS_MINX, TS_MAXX, 240, 0);
p.y = map(p.y, TS_MINY, TS_MAXY, 320, 0);
&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The following sketch demonstrates use of TouchScreen Library. This can also be used to calibrate the touch screen co-ordinates.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Compile and upload the sketch.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open serial port monitor and touch the points displayed on the screen.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;See if the displayed X and Y values are correct. If not, we have to re-calibrate the touch screen coordinates.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;how-to-calibrate-the-touch-screen&#34;&gt;How to calibrate the touch screen ?&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The parameters &lt;code&gt;TS_MINX, TS_MAXX, TS_MINY and TS_MAXY&lt;/code&gt; actually decides the extreme ends of the touch screen and actually forms the calibration parameters.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The values assigned to these variables are measured ADC values (i.e Raw X, Raw Y) when we touch the extreme diagonal ends of touch screen.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Touch points (0,0) and (239,319) and note down Raw X and Raw Y values. For better accuracy, try out many times and find the right value.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TS_MINX corresponds to ADC value when X = 0 ;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TS_MINY corresponds to ADC value when Y = 0 ;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TS_MAXX corresponds to ADC value when X = 240 -1 i.e 239 ;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TS_MAXY corresponds to ADC value when Y = 320 -1 i.e 319 ;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Change these parameters in the sketch, recompile and upload to Arduino.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Repeat the above steps if you still do not get accurate values.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;touch-screen-demo-sketch&#34;&gt;Touch Screen Demo Sketch&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;// Paint application - Demonstate both TFT and Touch Screen
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#include &amp;lt;stdint.h&amp;gt;
#include &amp;lt;TouchScreen.h&amp;gt;
#include &amp;lt;TFT.h&amp;gt;

#if defined(__AVR_ATmega1280__) || defined(__AVR_ATmega2560__) // mega
#define YP A2   // must be an analog pin, use &amp;quot;An&amp;quot; notation!
#define XM A1   // must be an analog pin, use &amp;quot;An&amp;quot; notation!
#define YM 54   // can be a digital pin, this is A0
#define XP 57   // can be a digital pin, this is A3

#elif defined(__AVR_ATmega32U4__) // leonardo
#define YP A2   // must be an analog pin, use &amp;quot;An&amp;quot; notation!
#define XM A1   // must be an analog pin, use &amp;quot;An&amp;quot; notation!
#define YM 18   // can be a digital pin, this is A0
#define XP 21   // can be a digital pin, this is A3

#else //168, 328, something else
#define YP A2   // must be an analog pin, use &amp;quot;An&amp;quot; notation!
#define XM A1   // must be an analog pin, use &amp;quot;An&amp;quot; notation!
#define YM 14   // can be a digital pin, this is A0
#define XP 17   // can be a digital pin, this is A3

#endif

//Measured ADC values for (0,0) and (210-1,320-1)
//TS_MINX corresponds to ADC value when X = 0
//TS_MINY corresponds to ADC value when Y = 0
//TS_MAXX corresponds to ADC value when X = 240 -1
//TS_MAXY corresponds to ADC value when Y = 320 -1

#define TS_MINX 140
#define TS_MAXX 900
#define TS_MINY 120
#define TS_MAXY 940

int color = WHITE;  //Paint brush color

// For better pressure precision, we need to know the resistance
// between X+ and X- Use any multimeter to read it
// The 2.8&amp;quot; TFT Touch shield has 300 ohms across the X plate

TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300); //init TouchScreen port pins

void setup()
{

    Tft.init();  //init TFT library
    pinMode(0,OUTPUT);
    //Draw the pallet
    Tft.fillRectangle(0,0,30,10,BLACK);
    Tft.fillRectangle(30,0,30,10,RED);
    Tft.fillRectangle(60,0,30,10,GREEN);
    Tft.fillRectangle(90,0,30,10,BLUE);
    Tft.fillRectangle(120,0,30,10,CYAN);
    Tft.fillRectangle(150,0,30,10,YELLOW);
    Tft.fillRectangle(180,0,30,10,WHITE);
    Tft.fillRectangle(210,0,30,10,GRAY1);

}

void loop()
{

    // a point object holds x y and z coordinates.
    Point p = ts.getPoint();

    //map the ADC value read to into pixel co-ordinates

    p.x = map(p.x, TS_MINX, TS_MAXX, 240, 0);
    p.y = map(p.y, TS_MINY, TS_MAXY, 320, 0);

    // we have some minimum pressure we consider &#39;valid&#39;
    // pressure of 0 means no pressing!

    if (p.z &amp;gt; ts.pressureThreshhold) {


        // Detect  paint brush color change
        if(p.y &amp;lt; 15)
        {
            if(p.x &amp;gt;= 0 &amp;amp;&amp;amp; p.x &amp;lt; 30)
            {
                color = BLACK;
            }
            if(p.x &amp;gt;= 30 &amp;amp;&amp;amp; p.x &amp;lt; 60)
            {
                color = RED;
                digitalWrite(0,HIGH);
            }
            if(p.x &amp;gt;= 60 &amp;amp;&amp;amp; p.x &amp;lt; 90)
            {
                color = GREEN;
            }
            if(p.x &amp;gt;= 90 &amp;amp;&amp;amp; p.x &amp;lt; 110)
            {
                color = BLUE;
                digitalWrite(0,LOW);
            }
            if(p.x &amp;gt;= 120 &amp;amp;&amp;amp; p.x &amp;lt; 150)
            {
                color = CYAN;
            }
            if(p.x &amp;gt;= 150 &amp;amp;&amp;amp; p.x &amp;lt; 180)
            {
                color = YELLOW;
            }
            if(p.x &amp;gt;= 180 &amp;amp;&amp;amp; p.x &amp;lt; 210)
            {
                color = WHITE;
            }
            if(p.x &amp;gt;= 210 &amp;amp;&amp;amp; p.x &amp;lt; 240)
            {
                color = GRAY1;
            }
        }
        else
        {
            Tft.fillCircle(p.x,p.y,2,color);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;demo-code-shown&#34;&gt;Demo Code shown&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Insert the TFT Touch Shield to Seeeduino as shown below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2.8inch-TFT_Touch_Shield_V1.0/raw/master/img/DemoShow.JPG&#34; alt=&#34;&#34; /&gt;
TFT Touch Shield connected to Seeeduino&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[Libraries]&lt;/strong&gt;&lt;a href=&#34;https://github.com/Seeed-Studio/TFT_Touch_Shield_V1&#34;&gt;TFT Touch Shield libraries&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Eagle]&lt;/strong&gt;&lt;a href=&#34;http://seeedstudio.com/wiki/images/c/c5/2.8_TFT_Touch_Shield_v1.0_EagleFiles.zip&#34;&gt;TFT Touch Shield v1.0 Schematic and Layout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[PDF]&lt;/strong&gt;&lt;a href=&#34;https://github.com/SeeedDocument/2.8inch-TFT_Touch_Shield_V1.0/raw/master/res/TFT%20Touch%20PCB.pdf&#34;&gt;TFT Touch PCB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[PDF]&lt;/strong&gt;&lt;a href=&#34;https://github.com/SeeedDocument/2.8inch-TFT_Touch_Shield_V1.0/raw/master/res/TFT%20Touch%20Sch.pdf&#34;&gt;TFT Touch SCH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Version]&lt;/strong&gt;&lt;a href=&#34;res/Schematic_for_Radio_Shack_.zip&#34;&gt;Radio Shack version of TFT Touch Shield in Eagle Files&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Datasheet]&lt;/strong&gt; &lt;a href=&#34;http://garden.seeedstudio.com/images/4/4e/ST7781R_datasheet.pdf&#34;&gt;ST7781R&lt;/a&gt; , &lt;a href=&#34;http://garden.seeedstudio.com/images/7/75/FGD280E3715V1_8bit.pdf&#34;&gt;FGD280E3715V1_8bit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[App Notes]&lt;/strong&gt;&lt;a href=&#34;http://www.adafruit.com/datasheets/AVR341.pdf&#34;&gt;ATMEL - App Notes on Four and five-wire Touch Screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[Touch Screen]&lt;/strong&gt;&lt;a href=&#34;http://focus.ti.com/lit/an/slyt209a/slyt209a.pdf&#34;&gt;TI - Using Resistive Touch Screen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[SD Card]&lt;/strong&gt;&lt;a href=&#34;https://github.com/adafruit/SD&#34;&gt;https://github.com/adafruit/SD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>2KM Long Range RF link kits w/ encoder and decoder</title>
      <link>http://wiki.seeed.cc/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/img/2kmrf.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is a super long-range 433mhz RF link kit. It comes with VCO, PLL technology, steady frequency and super anti-jamming ability. You can directly use it with your projects, like wireless data transport, remote control, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/2km-long-range-rf-link-kits-w-encoder-and-decoder-p-321.html?cPath=139_140&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specifications&#34;&gt;Specifications&lt;/h2&gt;

&lt;hr /&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Working voltage&lt;/td&gt;
&lt;td&gt;Receiver(3-5V), Transmitter(3-9V)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Working current&lt;/td&gt;
&lt;td&gt;≤2.5mA(5.0VDC)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Principle of operation&lt;/td&gt;
&lt;td&gt;Superhet（VCO, PLL）&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Modulation&lt;/td&gt;
&lt;td&gt;OOK/ASK&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Working band&lt;/td&gt;
&lt;td&gt;433.92MHz (customized service available)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Bandwidth&lt;/td&gt;
&lt;td&gt;1.5MHz&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sensitivity&lt;/td&gt;
&lt;td&gt;-105dBm (50Ω)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Rate&lt;/td&gt;
&lt;td&gt;＜5Kbps&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Decoding form&lt;/td&gt;
&lt;td&gt;PT2272&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Antenna length&lt;/td&gt;
&lt;td&gt;18cm&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Transmission range&lt;/td&gt;
&lt;td&gt;2 km&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;application-ideas&#34;&gt;Application Ideas&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Wireless switch&lt;/li&gt;
&lt;li&gt;Remote transmission&lt;/li&gt;
&lt;li&gt;Wireless control&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;hardware-overview&#34;&gt;Hardware Overview&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/img/433rf5.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/img/433rf6.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;Please follow the &lt;a href=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/res/2KM_RF.rar&#34;&gt;Instruction&lt;/a&gt; to hook up the communication system.&lt;/li&gt;
&lt;li&gt;Connect battery, button and transmit boards.
&lt;img src=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/img/2KM_TX.JPG&#34; alt=&#34;&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;!!!Note
    Please use 3-5V power source! 9V will damage the receiver board.
- Connect battery, LEDs and receiver boards.
&lt;img src=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/img/2KM_RX.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;!!!Note
    Do not put RX module and TX module too close: this would prevent them to work. Make sure that the RX module and TX module are at least 1 meter away from each other.
- When we press the button on the Transmitter side, the related LED on receiver side will be turned on.&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;[Instruction]&lt;/strong&gt;   &lt;a href=&#34;https://github.com/SeeedDocument/2KM_Long_Range_RF_link_kits_w_encoder_and_decoder/raw/master/res/2KM_RF.rar&#34;&gt;Transmitter and receiver Setup Manual&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;[Datasheet]&lt;/strong&gt;   &lt;a href=&#34;http://www.datasheetcatalog.org/datasheet/PrincetonTechnologyCorporation/mXusxsq.pdf&#34;&gt;Datasheet for PT2272 and PT2262&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>3.6V Micro hydro generator</title>
      <link>http://wiki.seeed.cc/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/3/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://bz.seeedstudio.com/depot/images/large/product/mhg_01_LRG.jpg&#34; alt=&#34;http://www.seeedstudio.com/depot/images/large/product/mhg_01_LRG.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Micro hydro power is clean, renewable energy. Here is a G &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; micro hydro generator which can supply stably output voltage and output current with the help of one voltage stabilizing circuit and one rechargeable battery. We can install it at home to save household energy, like using spray shower to light LEDs etc.&lt;/p&gt;

&lt;p&gt;&lt;big&gt;Pressure and Flow diagram&lt;/big&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/3.6V_Micro_hydro_generator/raw/master/img/Micro-hydro-diagram1.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;big&gt;Flow and Output voltage Diagram&lt;/big&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/3.6V_Micro_hydro_generator/raw/master/img/Micro-hydro-diagram2.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;!!!Note
    This module has added one voltage stabilizing circuit and one rechargeable battery, output voltage is stably 3.6v and output current is stably 300mA.
Flow and Output voltage Diagram&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/36v-micro-hydro-generator-p-634.html?cPath=155&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;hr /&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td width=&#34;400px&#34;&gt;Weight
&lt;/td&gt;
&lt;td width=&#34;400px&#34;&gt;165 g
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output voltage
&lt;/td&gt;
&lt;td&gt;3.6V
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Battery Capacity
&lt;/td&gt;
&lt;td&gt;300mA
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maximum working pressure
&lt;/td&gt;
&lt;td&gt;1.75 MPa
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Working pressure
&lt;/td&gt;
&lt;td&gt;0~1.75MPa
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Working temperature
&lt;/td&gt;
&lt;td&gt;0~110°C
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maximum
&lt;/td&gt;
&lt;td&gt;30mins at 110 °C
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Recommend flow rate range
&lt;/td&gt;
&lt;td&gt;1.5~20 l/min(Pressure 0.05-0.2mpa)
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Installation Method
&lt;/td&gt;
&lt;td&gt;direction of arrow
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Material
&lt;/td&gt;
&lt;td&gt;nylon/glass fiber,Polyformaldehyde
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Size of the input and output openings
&lt;/td&gt;
&lt;td&gt;0.8inch
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&#34;mechanic-dimensions&#34;&gt;Mechanic Dimensions&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/3.6V_Micro_hydro_generator/raw/master/img/Micro-hydro-dimen2.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Hardware Installation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/3.6V_Micro_hydro_generator/raw/master/img/Micro-hydro-struct.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>315MHz Simple RF Link Kit</title>
      <link>http://wiki.seeed.cc/315MHz_Simple_RF_Link_Kit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/315MHz_Simple_RF_Link_Kit/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/315MHz_Simple_RF_Link_Kit/raw/master/img/315M_433M.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This kit is used for one way wireless communication at a frequency of 315MHz and includes a transmitter module and a receiver module. The Grove configuration of this kit allows for around 40 meters of transmitting distance indoors, or around 100 meters outside.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/grove-315mhz-simple-rf-link-kit-p-1061.html?cPath=139_140&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GROVE compatible interface.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Uses ASK (Amplitude Shift Keying) Modulation.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;One way communication&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;h3 id=&#34;transmitter-module&#34;&gt;Transmitter Module&lt;/h3&gt;

&lt;table  cellspacing=&#34;0&#34; width=&#34;80%&#34;&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34;&gt; Item
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Min
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Typical
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Max
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Unit
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Working Voltage
&lt;/th&gt;
&lt;td&gt; 3.0
&lt;/td&gt;
&lt;td&gt; 5.0
&lt;/td&gt;
&lt;td&gt; 12.0
&lt;/td&gt;
&lt;td&gt; VDC
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Current
&lt;/th&gt;
&lt;td&gt; 3
&lt;/td&gt;
&lt;td&gt; /
&lt;/td&gt;
&lt;td&gt; 10
&lt;/td&gt;
&lt;td&gt; mA
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt;Work Mode
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; ASK
&lt;/td&gt;
&lt;td&gt; /
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Transmit Power(Max)
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt; 15
&lt;/td&gt;
&lt;td&gt; mW
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Working Distance
&lt;/th&gt;
&lt;td&gt; 40
&lt;/td&gt;
&lt;td&gt; /
&lt;/td&gt;
&lt;td&gt; 100
&lt;/td&gt;
&lt;td&gt; m
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3 id=&#34;receiver-module&#34;&gt;Receiver Module&lt;/h3&gt;

&lt;table  cellspacing=&#34;0&#34; width=&#34;80%&#34;&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34;&gt; Item
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Typical
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt; Unit
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Working Voltage
&lt;/th&gt;
&lt;td&gt; 5
&lt;/td&gt;
&lt;td&gt; VDC
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Quiescent Current
&lt;/th&gt;
&lt;td&gt; 5
&lt;/td&gt;
&lt;td&gt; mA
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Receiver Sensitivity
&lt;/th&gt;
&lt;td&gt; -103
&lt;/td&gt;
&lt;td&gt; dBm
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;th scope=&#34;row&#34;&gt; Operating frequency
&lt;/th&gt;
&lt;td&gt; 315
&lt;/td&gt;
&lt;td&gt; MHz
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&#34;application-ideas&#34;&gt;Application Ideas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Remote control&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Remote automation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Alarm&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;The transmitter and receiver modules both rely on a single wire for communication. Though using the UART supplied by the Arduino platform can work, it is recommended, instead, to use the VirtualWire library which uses Amplitude Shift Keying for modulation which provides better communication.&lt;/p&gt;

&lt;p&gt;Both the transmitter and receiver modules require three wires: Vcc, Ground, and signal. Both of pin 2 parts of the kit are not connected.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Connect the Transmitter module to Digital I/O 2 of the &lt;a href=&#34;http://wiki.seeed.cc/Grove-Base_Shield&#34; title=&#34;Grove - Base Shield&#34;&gt;Grove_-_Base_Shield&lt;/a&gt; on the Arduino being used for transmission.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Connect the Receiver module to Digital I/O 2 of the &lt;a href=&#34;http://wiki.seeed.cc/Grove-Base_Shield&#34; title=&#34;Grove - Base Shield&#34;&gt;Grove_-_Base_Shield&lt;/a&gt; on the receiving Arduino.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The hardware installation can refer to &lt;a href=&#34;http://wiki.seeed.cc/index.php-title=Grove-433MHz_Simple_RF_Link_Kit&#34; title=&#34;Grove-433MHz_Simple_RF_Link_Kit&#34;&gt;the usage of the module Grove - 433MHz Simple RF Link Kit&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://github.com/SeeedDocument/315MHz_Simple_RF_Link_Kit/raw/master/res/VirtualWire_Library.zip&#34;&gt;File: VirtualWire library&lt;/a&gt; and unzip it into the libraries file of Arduino IDE by the path: ..\arduino-1.0\libraries. Please reference &lt;a href=&#34;http://www.pjrc.com/teensy/td_libs_VirtualWire.html&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Upload the below code for transmitter module:
```
#include &lt;VirtualWire.h&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;//Grove - 315(433) RF link kit Demo v1.0
//by :&lt;a href=&#34;http://www.seeedstudio.com/&#34;&gt;http://www.seeedstudio.com/&lt;/a&gt;
//connect the sent module to D2 to use
#include &lt;VirtualWire.h&gt;&lt;/p&gt;

&lt;p&gt;int RF_TX_PIN = 2;&lt;/p&gt;

&lt;p&gt;void setup()
{
    vw_set_tx_pin(RF_TX_PIN); // Setup transmit pin
    vw_setup(2000); // Transmission speed in bits per second.
}&lt;/p&gt;

&lt;p&gt;void loop()
{
    const char *msg = &amp;ldquo;hello&amp;rdquo;;
    vw_send((uint8_t *)msg, strlen(msg));  // Send &amp;lsquo;hello&amp;rsquo; every 400ms.
    delay(400);&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
*   Upload the below code for receiver module:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;//Grove - 315(433) RF link kit Demo v1.0
//by :&lt;a href=&#34;http://www.seeedstudio.com/&#34;&gt;http://www.seeedstudio.com/&lt;/a&gt;
//connect the receive module to D2 to use ..
#include &lt;VirtualWire.h&gt;&lt;/p&gt;

&lt;p&gt;int RF_RX_PIN = 2;&lt;/p&gt;

&lt;p&gt;void setup()
{
    Serial.begin(9600);
    Serial.println(&amp;ldquo;setup&amp;rdquo;);
    vw_set_rx_pin(RF_RX_PIN);  // Setup receive pin.
    vw_setup(2000); // Transmission speed in bits per second.
    vw_rx_start(); // Start the PLL receiver.
}&lt;/p&gt;

&lt;p&gt;void loop()
{
    uint8_t buf[VW_MAX_MESSAGE_LEN];
    uint8_t buflen = VW_MAX_MESSAGE_LEN;
    if(vw_get_message(buf, &amp;amp;buflen)) // non-blocking I/O
    {
        int i;
        // Message with a good checksum received, dump HEX
        Serial.print(&amp;ldquo;Got: &amp;ldquo;);
        for(i = 0; i &amp;lt; buflen; ++i)
        {
            Serial.print(buf[i], HEX);
            Serial.print(&amp;rdquo; &amp;ldquo;);
            //Serial.print(buf[i]);
        }
        Serial.println(&amp;ldquo;&amp;rdquo;);
    }
}
```&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open the serial monitor of receiver module to see the result.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/315MHz_Simple_RF_Link_Kit/raw/master/img/Receive_Data.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;This is just a simple transmitter and receiver instance as a reference.&lt;/p&gt;

&lt;h2 id=&#34;version-tracker&#34;&gt;Version Tracker&lt;/h2&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;th&gt; Revision
&lt;/th&gt;
&lt;th&gt; Descriptions
&lt;/th&gt;
&lt;th&gt; Release
&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td width=&#34;300px&#34;&gt; v0.9b
&lt;/td&gt;
&lt;td width=&#34;500px&#34;&gt; Initial public release
&lt;/td&gt;
&lt;td width=&#34;200px&#34;&gt; 03,Oct,2011
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeeedDocument/315MHz_Simple_RF_Link_Kit/raw/master/res/VirtualWire_Library.zip&#34;&gt;File:VirtualWire Library.zip&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeeedDocument/315MHz_Simple_RF_Link_Kit/raw/master/res/315MHz_Demo.zip&#34;&gt;File:315MHz_demo.zip&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.open.com.au/mikem/arduino/VirtualWire.pdf&#34;&gt;VirtualWire Documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>315Mhz RF link kit</title>
      <link>http://wiki.seeed.cc/315Mhz_RF_link_kit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/315Mhz_RF_link_kit/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://bz.seeedstudio.com/depot/images/product/3151.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The kit is consisted of transmitter and receiver, popular used for remote control.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.seeedstudio.com/315mhz-rf-link-kit-p-76.html&#34;&gt;&lt;img src=&#34;https://github.com/SeeedDocument/Seeed-WiKi/raw/master/docs/images/300px-Get_One_Now_Banner-ragular.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Frequency: 315Mhz.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Modulation: ASK&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Receiver Data Output: High - &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2&lt;/sub&gt; Vcc, Low - 0.7v&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Transmitter Input Voltage: 3-12V (high voltage = more transmitting power)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;The popular link is like this: MCU -&amp;gt; Encoder -&amp;gt; Transmitter &amp;mdash;&amp;mdash; Receiver -&amp;gt; Decoder -&amp;gt; MCU,&lt;/p&gt;

&lt;p&gt;PT2262(Encoder) and PT2272(Decoder) are optional, their existence is to 1)avoid confusing when multiple RF links in range 2) isolate disturbance. You can integrate the encoding and decoding work to the MCUs on both side. Whenever there is no 315Mhz devices around, you may use it as direct cable connection.&lt;/p&gt;

&lt;p&gt;Excuse for the documentation, we will work on them. Before that, please consult us for any details, we are happy to find the answer for you ^^ We tried them using the guide from Sparkfun, it&amp;rsquo;s compatible. The only difference is in package, of some excess GND pins.&lt;/p&gt;

&lt;p&gt;More over, we will make more RF modules ourselves with different frequency and capacity. The next one in plan is based on cc1100 Please suggest us about your need :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/SeeedDocument/315Mhz_RF_link_kit/raw/master/img/315433RF.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/datasheet/315MRFlink.pdf&#34;&gt;Demo Scheme&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/SeeedDocument/315Mhz_RF_link_kit/raw/master/res/VirtualWire.zip&#34; title=&#34;File:VirtualWire.zip&#34;&gt;File:VirtualWire.zip&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/depot/images/product/VirtualWire.pdf&#34;&gt;Documentation For 1.3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.sparkfun.com/datasheets/RF/KLP_Walkthrough.pdf&#34;&gt;Example from sparkfun&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://winavr.scienceprog.com/example-avr-projects/running-tx433-and-rx433-rf-modules-with-avr-microcontrollers.html&#34;&gt;Example running rf modules&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>