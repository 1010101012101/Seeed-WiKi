<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A test config to generate mkdocs.yml frontmatter using Hugo&#39;s templating engine</title>
    <link>http://wiki.seeed.cc/tags/grove_analog-io_3v3-io_5v-plat_duino-plat_linkit-plat_bbg/index.xml</link>
    <description>Recent content on A test config to generate mkdocs.yml frontmatter using Hugo&#39;s templating engine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://wiki.seeed.cc/tags/grove_analog-io_3v3-io_5v-plat_duino-plat_linkit-plat_bbg/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Grove - Electricity Sensor</title>
      <link>http://wiki.seeed.cc/Grove-Electricity_Sensor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/Grove-Electricity_Sensor/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Electricity_Sensor/master/img/Twig-Electricity-Sensor.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Electricity sensor module is a member of Grove. It is based on the TA12-200 current transformer which can transform the large AC into small amplitude. You can use it to test large alternating current up to 5A.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/Grove-Electricity-Sensor-p-777.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/common/master/Get_One_Now_Banner.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Grove compatible interface&lt;/li&gt;
&lt;li&gt;Maximum 5A input&lt;/li&gt;
&lt;li&gt;High accuracy&lt;/li&gt;
&lt;li&gt;Small size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;!!!Tip
    More details about Grove modules please refer to &lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove System&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;application-ideas&#34;&gt;Application Ideas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Alternating current measurement&lt;/li&gt;
&lt;li&gt;Device condition monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;specification&#34;&gt;Specification&lt;/h2&gt;

&lt;h3 id=&#34;key-specification&#34;&gt;Key Specification&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Items&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Min&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PCB Size&lt;/td&gt;
&lt;td&gt;2.0cm*4.0cm&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Interface&lt;/td&gt;
&lt;td&gt;2.0mm pitch pin header&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;IO Structure&lt;/td&gt;
&lt;td&gt;SIG,NC,NC,GND&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;RoHS&lt;/td&gt;
&lt;td&gt;YES&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;electronic-characteristics&#34;&gt;Electronic Characteristics&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Items&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Min&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Norm&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Max&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Unit&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Transformation ratio&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2000:1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Input Current&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;A&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Output Current&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2.5&lt;/td&gt;
&lt;td&gt;mA&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sampling Resistance&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;800&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Ω&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sampling Voltage&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Working Frequency&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;20K&lt;/td&gt;
&lt;td&gt;HZ&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Nonlinear scale&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;0.2%&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Phase Shift&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;5&amp;rsquo;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Operating Temperature&lt;/td&gt;
&lt;td&gt;-55&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;85&lt;/td&gt;
&lt;td&gt;℃&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Dielectric strength&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;KVAC/1min&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;platforms-supported&#34;&gt;Platforms Supported&lt;/h2&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;h3 id=&#34;with-arduino-arduino-arduino&#34;&gt;With &lt;a href=&#34;http://wiki.seeed.cc/Arduino&#34; title=&#34;Arduino&#34;&gt;Arduino&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The following sketch demonstrates a simple application of measuring the amplitude of the alternating voltage. The SIG pin will output a alternating voltage based on the alternating current being measured. You can measure the value using ADC.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect the module to the analog A0 of &lt;a href=&#34;http://www.seeedstudio.com/depot/grove-base-shield-p-754.html?cPath=132_134&#34;&gt;Grove - Base board&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Put the alternating current wire through the hole of the current transformer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Electricity_Sensor/master/img/Grove-Electricity_Sensor_hardware.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copy and paste code below to a new Arduino sketch.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    /****************************************************************************/  
    //  Function: Measure the amplitude current of the alternating current and 
    //            the effective current of the sinusoidal alternating current.
    //  Hardware: Grove - Electricity Sensor        
    //  Date:    Jan 19,2013
    //  by www.seeedstudio.com
    #define ELECTRICITY_SENSOR A0 // Analog input pin that sensor is attached to

    float amplitude_current;               //amplitude current
    float effective_value;       //effective current 

    void setup() 
    {
        Serial.begin(9600); 
        pins_init();
    }
    void loop() 
    {
        int sensor_max;
        sensor_max = getMaxValue();
        Serial.print(&amp;quot;sensor_max = &amp;quot;);
        Serial.println(sensor_max);
        //the VCC on the Grove interface of the sensor is 5v
        amplitude_current=(float)sensor_max/1024*5/800*2000000;
        effective_value=amplitude_current/1.414;//minimum_current=1/1024*5/800*2000000/1.414=8.6(mA) 
                            //Only for sinusoidal alternating current
        Serial.println(&amp;quot;The amplitude of the current is(in mA)&amp;quot;);
        Serial.println(amplitude_current,1);//Only one number after the decimal point
        Serial.println(&amp;quot;The effective value of the current is(in mA)&amp;quot;);
        Serial.println(effective_value,1);
    }
    void pins_init()
    {
        pinMode(ELECTRICITY_SENSOR, INPUT);
    }
    /*Function: Sample for 1000ms and get the maximum value from the SIG pin*/
    int getMaxValue()
    {
        int sensorValue;             //value read from the sensor
        int sensorMax = 0;
        uint32_t start_time = millis();
        while((millis()-start_time) &amp;lt; 1000)//sample for 1000ms
        {
            sensorValue = analogRead(ELECTRICITY_SENSOR);
            if (sensorValue &amp;gt; sensorMax) 
            {
                /*record the maximum sensor value*/
                sensorMax = sensorValue;
            }
        }
        return sensorMax;
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Upload the code.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
The minimum effective current that can be sensed by the code can be calculated using the equation below. minimum_current=1/1024*5/800*2000000/1.414=8.6(mA).
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Open the serial monitor, The results is as follows：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Electricity_Sensor/master/img/Elecricity_Sensor.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;with-raspberry-pi&#34;&gt;With Raspberry Pi&lt;/h3&gt;

&lt;p&gt;1.You should have got a raspberry pi and a grovepi or grovepi+.&lt;/p&gt;

&lt;p&gt;2.You should have completed configuring the development enviroment, otherwise follow &lt;a href=&#34;http://wiki.seeed.cc/GrovePiPlus&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;3.Connection&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plug the sensor to grovepi socket A0 by using a grove cable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.Navigate to the demos&amp;rsquo; directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   cd yourpath/GrovePi/Software/Python/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To see the code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    nano grove_electricity_sensor.py   # &amp;quot;Ctrl+x&amp;quot; to exit #
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    import time
    import grovepi

    # Connect the Grove Electricity Sensor to analog port A0
    # SIG,NC,NC,GND
    sensor = 0

    grovepi.pinMode(sensor,&amp;quot;INPUT&amp;quot;)

    # Vcc of the grove interface is normally 5v
    grove_vcc = 5

    while True:
        try:
            # Get sensor value
            sensor_value = grovepi.analogRead(sensor)

            # Calculate amplitude current (mA)
            amplitude_current = (float)(sensor_value / 1024 * grove_vcc / 800 * 2000000)

            # Calculate effective value (mA)
            effective_value = amplitude_current / 1.414

            # minimum_current = 1 / 1024 * grove_vcc / 800 * 2000000 / 1.414 = 8.6(mA)
            # Only for sinusoidal alternating current

            print &amp;quot;sensor_value&amp;quot;, sensor_value
            print &amp;quot;The amplitude of the current is&amp;quot;, amplitude_current, &amp;quot;mA&amp;quot;
            print &amp;quot;The effective value of the current is&amp;quot;, effective_value, &amp;quot;mA&amp;quot;
            time.sleep(1)

        except IOError:
            print &amp;quot;Error&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.Run the demo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo python grove_electricity_sensor.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Electricity_Sensor/master/res/Electricity_sensor_v1.0_eagle_files.zip&#34;&gt;Grove -Electricity Sensor Eagle File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Electricity_Sensor/master/res/Electricity_sensor_sch.pdf&#34;&gt;Schematic in PDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- This Markdown file was created from http://www.seeedstudio.com/wiki/Grove_-_Electricity_Sensor --&gt;
</description>
    </item>
    
    <item>
      <title>Grove - Slide Potentiometer</title>
      <link>http://wiki.seeed.cc/Grove-Slide_Potentiometer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/Grove-Slide_Potentiometer/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Sliding1.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Grove - Slide Potentiometer module incorporates a linear variable resistor with a maximum resistance of 10KΩ. When you move the slider from one side to the other, its output voltage will range from 0 V to the Vcc you apply. It connects to the other Grove modules through a standard 4-Pin &lt;strong&gt;Grove Cable&lt;/strong&gt;. Three of the pins are connected to OUT (Pin 1), Vcc (Pin 3) and GND (Pin 4), while the fourth pin (Pin 2) is connected to a on-board green indicator LED. The LED is used to visually represent the resistance change on the potentiometer.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/Grove-Slide-Potentiometer-p-1196.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/common/master/Get_One_Now_Banner.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;30 mm long slide length&lt;/li&gt;
&lt;li&gt;Linear resistance taper&lt;/li&gt;
&lt;li&gt;Grove compatible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;!!!Tip
    More details about Grove modules please refer to &lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove System&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;application-ideas&#34;&gt;Application Ideas&lt;/h2&gt;

&lt;p&gt;Here are some projects for your reference.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Arduino BoomBox&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Arduino BeatBox&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Recipe-Arduino_BoomBox.jpg&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Recipe-Arduino_BeatBox.jpg&#34; alt=&#34;&#34; /&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;http://www.seeed.cc/project_detail.html?id=171&#34;&gt;Make it NOW!&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.seeed.cc/project_detail.html?id=187&#34;&gt;Make it NOW!&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;specifications&#34;&gt;Specifications&lt;/h2&gt;

&lt;table border=&#34;1&#34; cellspacing=&#34;0&#34; width=&#34;80%&#34;&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34;&gt;
Item
&lt;/th&gt;
&lt;th&gt;
Min
&lt;/th&gt;
&lt;th&gt;
Typical
&lt;/th&gt;
&lt;th&gt;
Max
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th scope=&#34;row&#34;&gt;
Voltage (DC)
&lt;/th&gt;
&lt;td&gt;
3.3V
&lt;/td&gt;
&lt;td&gt;
5.0V
&lt;/td&gt;
&lt;td&gt;
30V
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th scope=&#34;row&#34;&gt;
Current
&lt;/th&gt;
&lt;td&gt;
-
&lt;/td&gt;
&lt;td&gt;
-
&lt;/td&gt;
&lt;td&gt;
30mA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th scope=&#34;row&#34;&gt;
Dimension
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt;
24mm x60mm
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th height=&#34;22&#34; scope=&#34;row&#34;&gt;
Net Weight
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt;
8.6g
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th height=&#34;22&#34; scope=&#34;row&#34;&gt;
Rotational life
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt;
&amp;gt;15,000 cycles
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th height=&#34;22&#34; scope=&#34;row&#34;&gt;
Total resistance
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt;
10KΩ
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th height=&#34;22&#34; scope=&#34;row&#34;&gt;
Stroke length
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt;
30mm
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th height=&#34;22&#34; scope=&#34;row&#34;&gt;
Total resistance tolerance
&lt;/th&gt;
&lt;td colspan=&#34;3&#34;&gt;
+/- 20%
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;platforms-supported&#34;&gt;Platforms Supported&lt;/h2&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;h4 id=&#34;as-an-adjustable-resistor&#34;&gt;As an Adjustable Resistor&lt;/h4&gt;

&lt;p&gt;As shown below, the Grove - Slide Potentiometer can be used as a simple slide potentiometer in any MCU controlled or stand-alone project.
&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Sliding_justr.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;standalone&#34;&gt;Standalone&lt;/h3&gt;

&lt;p&gt;Follow these steps to build a sample Grove circuit using this module but without using any microcontroller board:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Connect the slide potentiometer module to the input side of your circuit (to the left of the power module). On the output side of the circuit, you may use a range of User Interface modules (Grove - Red LED, Grove - LED String Light, Grove - Mini Fan, Grove - Buzzer, Grove - Recorder etc.)&lt;/li&gt;
&lt;li&gt;Power up the circuit when complete.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The slide potentiometer module can now be used to trigger an output. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When used in conjunction with a Grove - Red LED output module, observe that the brightness of the LED increases as you move the slider from GND to Vcc. At Vcc, the resistance of the potentiometer is minimum and the LED burns the brightest. The same behavior can be seen when the slide potentiometer is used with the Grove - LED String Light module - the more voltage you apply by taking the slider towards the Vcc mark, the brighter the LED lights would become.&lt;/li&gt;
&lt;li&gt;Similarly, you can use the slide potentiometer to vary the speed of your Grove - Mini Fan or the frequency with which your Grove - Buzzer module sounds&lt;/li&gt;
&lt;li&gt;The slide potentiometer can also be used as an ON/OFF switch for any circuit. Take the slider to the Vcc position to switch it ON and move it down to GND to switch OFF a circuit.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In terms of choosing a power module, you can use either the Grove - USB Power module or the Grove - DC Jack Power module for building standalone Grove circuits.&lt;/p&gt;

&lt;h3 id=&#34;with-arduino-arduino-arduino&#34;&gt;With &lt;a href=&#34;http://wiki.seeed.cc/Arduino&#34; title=&#34;Arduino&#34;&gt;Arduino&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&#34;as-a-voltage-divider&#34;&gt;As a Voltage Divider&lt;/h4&gt;

&lt;p&gt;Follow these simple steps to make the slide potentiometer module function as a voltage divider:&lt;/p&gt;

&lt;p&gt;1.When using the module in conjunction with an &lt;a href=&#34;http://wiki.seeed.cc/Arduino&#34; title=&#34;Arduino&#34;&gt;Arduino&lt;/a&gt; or a &lt;a href=&#34;http://wiki.seeed.cc/Seeeduino_v4.2&#34; title=&#34;Seeeduino&#34;&gt;Seeeduino&lt;/a&gt;, use the Grove - Base Shield and connect the Grove - Slide Potentiometer module to the shield using a designated Grove Interface (e.g. Analog Port 0 as shown below).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Sliding2.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;2.Connect the board to PC using USB cable.&lt;/p&gt;

&lt;p&gt;3.Upload the following sample sketch.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int adcPin = A0; // select the input pin for the potentiometer
int ledPin = A1; // select the pin for the LED
int adcIn = 0;   // variable to store the value coming from the sensor
void setup()
{
    Serial.begin(9600); // init serial to 9600b/s
    pinMode(ledPin, OUTPUT); // set ledPin to OUTPUT
    Serial.println(&amp;quot;Sliding Potentiometer Test Code!!&amp;quot;);
}
void loop()
{
    // read the value from the sensor:
    adcIn = analogRead(adcPin);
    if(adcIn &amp;amp;gt;= 500) digitalWrite(ledPin,HIGH);  // if adc in &amp;amp;gt; 500, led light
    else digitalWrite(ledPin, LOW);
    Serial.println(adcIn);
    delay(100);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4.Open the serial monitor. You should see some data from ADC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Sliding_com.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;5.Move the lever back and forth. The serial data will change correspondingly. When the output resistance exceeds a certain preset value, the on-board indicator LED will also light up.&lt;/p&gt;

&lt;h4 id=&#34;as-an-hid-device&#34;&gt;As an HID Device&lt;/h4&gt;

&lt;p&gt;Slide Potentiometer can be an effective Human Interface Device (HID) and can be used, for example, in the radio controller of a Radio Controlled toy car. The picture below shows two Slide Potentiometers on the control panel - one to control the speed of the left wheel, and the other to control the speed of the right wheel of the toy car respectively. Now you can change the speeds of both motors and see the behavior. You will see that if you make the right wheel spin faster than the left wheel, the car will turn rightwards, and if you make the left wheel spin faster than the right wheel, the car will turn leftwards.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/img/Car.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;with-raspberry-pi&#34;&gt;With Raspberry Pi&lt;/h3&gt;

&lt;p&gt;1.You should have got a raspberry pi and a grovepi or grovepi+.&lt;/p&gt;

&lt;p&gt;2.You should have completed configuring the development enviroment, otherwise follow &lt;a href=&#34;http://wiki.seeed.cc/GrovePiPlus&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;3.Connection&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plug the sensor to grovepi socket A0 by using a grove cable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.Navigate to the demos&amp;rsquo; directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    cd yourpath/GrovePi/Software/Python/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To see the code
&lt;code&gt;
nano grove_slide_potentiometer.py   # &amp;quot;Ctrl+x&amp;quot; to exit #
&lt;/code&gt;
```
import time
import grovepi&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;connect-the-grove-slide-potentiometer-to-analog-port-a0&#34;&gt;Connect the Grove Slide Potentiometer to analog port A0&lt;/h1&gt;

&lt;h1 id=&#34;out-led-vcc-gnd&#34;&gt;OUT,LED,VCC,GND&lt;/h1&gt;

&lt;p&gt;slide = 0   # pin 1 (yellow wire)&lt;/p&gt;

&lt;h1 id=&#34;the-device-has-an-onboard-led-accessible-as-pin-2-on-port-a0&#34;&gt;The device has an onboard LED accessible as pin 2 on port A0&lt;/h1&gt;

&lt;h1 id=&#34;out-led-vcc-gnd-1&#34;&gt;OUT,LED,VCC,GND&lt;/h1&gt;

&lt;p&gt;led = 1     # pin 2 (white wire)&lt;/p&gt;

&lt;p&gt;grovepi.pinMode(slide,&amp;ldquo;INPUT&amp;rdquo;)
grovepi.pinMode(led,&amp;ldquo;OUTPUT&amp;rdquo;)
time.sleep(1)&lt;/p&gt;

&lt;p&gt;while True:
    try:
        # Read sensor value from potentiometer
        sensor_value = grovepi.analogRead(slide)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    # Illuminate onboard LED
    if sensor_value &amp;gt; 500:
        grovepi.digitalWrite(led,1)
    else:
        grovepi.digitalWrite(led,0)

    print &amp;quot;sensor_value =&amp;quot;, sensor_value

except IOError:
    print &amp;quot;Error&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;
5.Run the demo.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sudo python grove_slide_potentiometer.py
```&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/res/Sliding_Potentiometer.rar&#34;&gt;Sliding Potentiometer Eagle File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/res/Sliding_protentiometer_sch.pdf&#34;&gt;Sliding Potentiometer in PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Slide_Potentiometer/master/res/Sliding_potentiometer_datasheet.pdf&#34;&gt;Sliding Potentiometer datasheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- This Markdown file was created from http://www.seeedstudio.com/wiki/Grove_-_Slide_Potentiometer --&gt;
</description>
    </item>
    
  </channel>
</rss>