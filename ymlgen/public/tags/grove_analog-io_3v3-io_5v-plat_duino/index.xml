<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A test config to generate mkdocs.yml frontmatter using Hugo&#39;s templating engine</title>
    <link>http://wiki.seeed.cc/tags/grove_analog-io_3v3-io_5v-plat_duino/index.xml</link>
    <description>Recent content on A test config to generate mkdocs.yml frontmatter using Hugo&#39;s templating engine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://wiki.seeed.cc/tags/grove_analog-io_3v3-io_5v-plat_duino/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Grove - 80cm Infrared Proximity Sensor</title>
      <link>http://wiki.seeed.cc/Grove-80cm_Infrared_Proximity_Sensor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/Grove-80cm_Infrared_Proximity_Sensor/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-80cm_Infrared_Proximity_Sensor/master/img/Image_of_PSD.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The 80cm Infrared Proximity Sensor is a General Purpose Type Distance Measuring Sensor. This sensor SharpGP2Y0A21YK, boasts a small package and very low current consumption, takes a continuous distance reading and returns a corresponding analog voltage with a range of 10cm (4&amp;rdquo;) to 80cm (30&amp;rdquo;). Can be used in TVs, personal computers, cars and so on.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/Grove-80cm-Infrared-Proximity-Sensor-p-788.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/common/master/Get_One_Now_Banner.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Easy to use&lt;/li&gt;
&lt;li&gt;Wide supply voltage range: 2.5Vâ€“7V&lt;/li&gt;
&lt;li&gt;Grove Interface&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;!!!Tip
    More details about Grove modules please refer to &lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove System&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;application-ideas&#34;&gt;Application Ideas&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Waterdrop conservation&lt;/li&gt;
&lt;li&gt;Toys&lt;/li&gt;
&lt;li&gt;Robotics&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;specifications&#34;&gt;Specifications&lt;/h2&gt;

&lt;table border=&#34;1&#34; cellspacing=&#34;0&#34; width=&#34;80%&#34;&gt;
&lt;tr&gt;
&lt;th scope=&#34;col&#34;&gt;
Item
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt;
Minimum
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt;
Typical
&lt;/th&gt;
&lt;th scope=&#34;col&#34;&gt;
Maximum
&lt;/th&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th scope=&#34;row&#34;&gt;
Working Voltage
&lt;/th&gt;
&lt;td&gt;
2.5V
&lt;/td&gt;
&lt;td&gt;
5V
&lt;/td&gt;
&lt;td&gt;
7V
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th scope=&#34;row&#34;&gt;
Analog Output Voltage(80cm)
&lt;/th&gt;
&lt;td&gt;
0.25V
&lt;/td&gt;
&lt;td&gt;
0.4V
&lt;/td&gt;
&lt;td&gt;
0.5V
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr align=&#34;center&#34;&gt;
&lt;th scope=&#34;row&#34;&gt;
Average Current Consumption
&lt;/th&gt;
&lt;td&gt;
-
&lt;/td&gt;
&lt;td&gt;
33mA
&lt;/td&gt;
&lt;td&gt;
50mA
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h2 id=&#34;platforms-supported&#34;&gt;Platforms Supported&lt;/h2&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;h3 id=&#34;with-arduino&#34;&gt;With Arduino&lt;/h3&gt;

&lt;p&gt;The Infrared Proximity sensor is easy to use. The relationship between the voltage reading and the distance as shown below. When we read the voltage, which indicate the distance from the object in front to this sensor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect the 3-pin connector to the sensor, and connect the 4-pin connector to the A1 port of the &lt;strong&gt;Grove-Base Shield&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
This sensor is quite small and use a tiny connector called the Japan Solderless Terminal (JST) connector. These connectors have three wires: Ground, Vcc, and the Output signal. Because this sensor fires continuously and doesn&#39;t need any clock to initiate a reading cycle, it is easy to interface with any microcontroller. For Arduino &amp; Seeeduino, we prepared a 4-pin to 3-pin wire to convert the 3-pin connecter on the sensor to 4-pin connecter on the Grove Base Shield, to compatible with the Seeeduino Grove interface.
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Connect Arduino/Seeeduino via a USB cable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-80cm_Infrared_Proximity_Sensor/master/img/80cm_Infrared.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Copy and paste code below to a new Arduino sketch.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    #define IR_PROXIMITY_SENSOR A1 // Analog input pin that  is attached to the sensor
    #define ADC_REF 5//reference voltage of ADC is 5v.If the Vcc switch on the Seeeduino
                     //board switches to 3V3, the ADC_REF should be 3.3
    float voltage;//the sensor voltage, you can calculate or find the distance
                    // to the reflective object according to the figures
                    //on page 4 or page 5 of the datasheet of the GP2Y0A21YK.

    void setup() 
    {
        // initialise serial communications at 9600 bps:
        Serial.begin(9600); 
    }
     
    void loop() 
    {
        voltage = getVoltage();
        Serial.print(&amp;quot;sensor voltage  = &amp;quot; );                       
        Serial.print(voltage); 
        // wait 500 milliseconds before the next loop
        delay(500); 
    }
    /****************************************************************************/
    /*Function: Get voltage from the sensor pin that is connected with analog pin*/
    /*Parameter:-void                                                       */
    /*Return:   -float,the voltage of the analog pin                        */
    float getVoltage()
    {
        int sensor_value;
        int sum;  
        // read the analog in value:
        for (int i = 0;i &amp;lt; 20;i ++)//Continuous sampling 20 times
        {
            sensor_value = analogRead(IR_PROXIMITY_SENSOR); 
            sum += sensor_value;
        }
        sensor_value = sum / 20;
        float voltage;
        voltage = (float)sensor_value*ADC_REF/1024;
        return voltage;
    } 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Upload the code.&lt;/li&gt;
&lt;li&gt;Open the Serial Monitor, you can get the voltage. you can calculate or find the distance to the reflective object according to the below figures.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-80cm_Infrared_Proximity_Sensor/master/img/Infrared_Proximity.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
Because of some basic trigonometry within the triangle from the emitter to reflection spot to receiver, the output of the detector is non-linear with respect to the distance being measured.
&lt;/div&gt;

&lt;h3 id=&#34;with-raspberry-pi&#34;&gt;With Raspberry Pi&lt;/h3&gt;

&lt;p&gt;1.You should have got a raspberry pi and a grovepi or grovepi+.&lt;/p&gt;

&lt;p&gt;2.You should have completed configuring the development environment, otherwise follow &lt;a href=&#34;http://wiki.seeed.cc/GrovePiPlus&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;3.Connection&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plug the sensor to grovepi socket D4 by using a grove cable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.Navigate to the demos&amp;rsquo; directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   cd yourpath/GrovePi/Software/Python/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;To see the code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    nano grove_infrared_distance_interrupt.py    # &amp;quot;Ctrl+x&amp;quot; to exit #
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    import time
    import grovepi

    # Connect the Grove Infrared Distance Interrupt Sensor to digital port D4
    # SIG,NC,VCC,GND
    sensor = 4

    grovepi.pinMode(sensor,&amp;quot;INPUT&amp;quot;)

    while True:
        try:
            # Sensor returns LOW and onboard LED lights up when the
            # received infrared light intensity exceeds the calibrated level
            if grovepi.digitalRead(sensor) == 0:
                print &amp;quot;found something&amp;quot;
            else:
                print &amp;quot;nothing&amp;quot;

            time.sleep(.5)

        except IOError:
            print &amp;quot;Error&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.Run the demo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo python grove_infrared_distance_interrupt.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;

&lt;p&gt;This new rangers use triangulation and a small linear CCD array to compute the distance and/or presence of objects in the field of view. The basic idea is this: a pulse of IR light is emitted by the emitter. This light travels out in the field of view and either hits an object or just keeps on going. In the case of no object, the light is never reflected and the reading shows no object. If the light reflects off an object, it returns to the detector and creates a triangle between the point of reflection, the emitter, and the detector.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-80cm_Infrared_Proximity_Sensor/master/img/Theory_of_PSD.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The angles in this triangle vary based on the distance to the object. The receiver portion of these new detectors is actually a precision lens that transmits the reflected light onto various portions of the enclosed linear CCD array based on the angle of the triangle described above. The CCD array can then determine what angle the reflected light came back at and therefore, it can calculate the distance to the object.&lt;/p&gt;

&lt;p&gt;This new method of ranging is almost immune to interference from ambient light and offers amazing indifference to the color of object being detected. Detecting a black wall in full sunlight is now possible.&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-80cm_Infrared_Proximity_Sensor/master/res/GP2Y0A21YK.pdf&#34;&gt;GP2Y0A21YK datasheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- This Markdown file was created from http://www.seeedstudio.com/wiki/Grove_-_80cm_Infrared_Proximity_Sensor --&gt;
</description>
    </item>
    
    <item>
      <title>Grove - Infrared Temperature Sensor</title>
      <link>http://wiki.seeed.cc/Grove-Infrared_Temperature_Sensor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/Grove-Infrared_Temperature_Sensor/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/img/Grove-Infrared_Temperature_Sensor.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The Infrared temperature sensor is a non-contact temperature measure model. It is composed of 116 elements of thermocouple in series on a floating micro-membrane, the black Surface of the sensor is good to absorb the incident thermal infrared radiation, which might trigger a voltage response at output. This sensor outputs an analog voltage (0~1.1V) according to target temperature.&lt;/p&gt;

&lt;p&gt;Old version: v0.92.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/Grove-Infrared-Temperature-Sensor-p-1058.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/common/master/Get_One_Now_Banner.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;specifications&#34;&gt;Specifications&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Voltage: 3-5V&lt;/li&gt;
&lt;li&gt;Measuring Current Supply: 160-200 uA&lt;/li&gt;
&lt;li&gt;Measuring Range: -10~100Â°C&lt;/li&gt;
&lt;li&gt;Holding Time: 2S&lt;/li&gt;
&lt;li&gt;Operating Temperature: -10~80 Â°C&lt;/li&gt;
&lt;li&gt;Storage Temperature: -35-80 Â°C&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;!!!Tip
    More details about Grove modules please refer to &lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove System&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;platforms-supported&#34;&gt;Platforms Supported&lt;/h2&gt;

&lt;h2 id=&#34;demonstration&#34;&gt;Demonstration&lt;/h2&gt;

&lt;p&gt;The following sketch demonstrates a simple application of measure the measure the surrounding temperature around the sensor and the temperature of the target which is in front of the sensor. And print the result on the serial monitor.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Connect this module to Seeeduino using Grove-Base Shield port A0 and A1.&lt;/li&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/res/MeasureTemperature.zip&#34;&gt;Demo Code&lt;/a&gt; and open it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before measuring temperature, you need simple setting. Following the instruction below before your test and you will gain a accurately result.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Regulate the sensor voltage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After uploading the demo program, make the sensor in normal environment more than 5 minutes that make the sensor temperature the same as surrounding temperature. Then open the serial monitor to check the voltage which the sensor output. Ideally, when the ambient temperature is equal to the temperature sensor, the infrared sensor (TP-538U) output is 0V.We should regulate the reference voltage which offset at 0.5V by hardware. As shown below, the sensor voltage is 0.014V, we just need to change the offset_vol value as0.014 which you obtain from the serial monitor in program.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/img/Infrared_Temperature_Sensor_code2.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/img/Serialmonitor.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Regulate the sensor detected distance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;According to our experiment, the sensor&amp;rsquo;s nominal measure distance is 9CM, but we canâ€™t ensure all sensor have the same character. So if you want to have accurate result, you need to regulate it with Ice and water mixture to measure the 0â„ƒ, and use boiled water to regulate the 100â„ƒ. After that, you can obtain the effective distance of the sensor.&lt;/p&gt;

&lt;p&gt;The specific method for measuring is fill with ice and water in a dark container which has a flat surface. Waiting for the container drop to 0â„ƒ, keep the sensor 9CM between object, move the sensor forward or back and check the result, if output is 0â„ƒ, note down the distance value. The same method to check boiled water. When you gain a pair of value, make a deal with average calculation. You can begin to measure in a rated distance which you just obtained now.&lt;/p&gt;

&lt;p&gt;Now we can measure the surrounding temperature around the sensor. The sensor is apply in a nominal distance, you can have a try in other distance, but the distance-temperature diagram neither sensorâ€™s manufacturer nor we obtained, you can draw it follow the two instructions above. We reserve variable &lt;strong&gt;&amp;ldquo;temperature_range&amp;rdquo;&lt;/strong&gt; in demo code. We assume that the target distance is 3 cm, the coefficient which you measured may be 5 more or less. Wish you have a fun try.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/img/Infrared_Temperature_Sensor_Code_1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Advanced application example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/img/Infrared_temperature_example.JPG&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
&lt;ol&gt;&lt;li&gt; The demo code does not support Atmega168.&lt;/li&gt;
&lt;li&gt;In order to gain a accurate measured, the distance(D) and target diament(S) rate D:S must less than 0.5.&lt;/li&gt;&lt;/ol&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/img/Dsdiagram.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/res/Infrared_Temperature_Sensor_v0.92_egale_file.zip&#34;&gt;Grove-Infrared Temperature Sensor V0.9 Eagle File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/res/Infrared_Temperature_Sensor_V1.0_egale_file.zip&#34;&gt;Grove-Infrared Temperature Sensor V1.0 Eagle File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/res/OTP-538Udatasheet.zip&#34;&gt;OTP-538U Datasheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/res/MeasureTemperature.zip&#34;&gt;Demo Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Infrared_Temperature_Sensor/master/res/Infrared_temperature_demo_code_with_serialLCD.zip&#34;&gt;Infrared Temperature Demo Code with SerialLCD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- This Markdown file was created from http://www.seeedstudio.com/wiki/Grove_-_Infrared_Temperature_Sensor --&gt;
</description>
    </item>
    
    <item>
      <title>Grove - Piezo Vibration Sensor</title>
      <link>http://wiki.seeed.cc/Grove-Piezo_Vibration_Sensor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wiki.seeed.cc/Grove-Piezo_Vibration_Sensor/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Piezo_Vibration_Sensor/master/img/Grove-Piezo_Vibration_Sensor-1.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Piezo_Vibration_Sensor/master/img/Piezo_Vibration_Sensor_02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Grove- Piezo Vibration Sensor is suitable for measurements of flexibility, vibration, impact and touch. The module is based on PZT film sensor LDT0-028. When the sensor moves back and forth, a certain voltage will be created by the voltage comparator inside of it. A wide dynamic range (0.001Hz~1000MHz) guarantees an excellent measuring performance. And, you can adjust its sensitivity by adjusting the on-board potentiometer with a screw.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.seeedstudio.com/Grove-Piezo-Vibration-Sensor-p-1411.html&#34;&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/common/master/Get_One_Now_Banner.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Standard grove socket&lt;/li&gt;
&lt;li&gt;Wide dynamic rangeï¼š0.1Hz~180Hz&lt;/li&gt;
&lt;li&gt;Adjustable sensitivity&lt;/li&gt;
&lt;li&gt;High receptivity for strong impact&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;!!!Tip
    More details about Grove modules please refer to &lt;a href=&#34;http://wiki.seeed.cc/Grove_System/&#34;&gt;Grove System&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;platforms-supported&#34;&gt;Platforms Supported&lt;/h2&gt;

&lt;h2 id=&#34;applications&#34;&gt;Applications&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vibration Sensing in Washing Machine&lt;/li&gt;
&lt;li&gt;Low Power Wakeup Switch&lt;/li&gt;
&lt;li&gt;Low Cost Vibration Sensing&lt;/li&gt;
&lt;li&gt;Car Alarms&lt;/li&gt;
&lt;li&gt;Body Movement&lt;/li&gt;
&lt;li&gt;Security Systems&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;h3 id=&#34;with-arduino-arduino-arduino&#34;&gt;With &lt;a href=&#34;http://wiki.seeed.cc/Arduino&#34; title=&#34;Arduino&#34;&gt;Arduino&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;The Grove - Piezo Vibration Sensor outputs a logic HIGH when vibration was detected. We can use any of Arduino pins to read the data. Here is an example of Piezo Vibration Sensor controlling LED. When the vibration was detected, this sensor outputs a logic high signal (the sensitivity can be changed by adjusting the potentiometer), an LED lights up.&lt;/p&gt;

&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;admonition-title&#34;&gt;Note&lt;/p&gt;
It may output low level even though originally output high level when you increase the threshold voltage by clockwise adjusting the potentiometer.
&lt;/div&gt;

&lt;p&gt;1.Connect the module to the Analog port 0 of base shield using the 4-pin grove cable and connect LED to Pin 12.&lt;/p&gt;

&lt;p&gt;2.Plug the Grove - Basic Shield into Arduino.&lt;/p&gt;

&lt;p&gt;3.Connect Arduino to PC by using a USB cable.&lt;/p&gt;

&lt;p&gt;4.Copy and paste code below to a new Arduino sketch.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const int ledPin=12;
void setup() {
    Serial.begin(9600);
    pinMode(ledPin,OUTPUT);
}

void loop() {
    int sensorValue = analogRead(A0);
    Serial.println(sensorValue);
    delay(1000);
    if(sensorValue==1023)
    {
        digitalWrite(ledPin,HIGH);
    }
    else
    {
        digitalWrite(ledPin,LOW);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5.Touch the piezo sensor to make it vibrate, of course, any way to make it vibrate would be OK too. The LED would be on when vibration detected. You can also Open the serial monitor to see the sensor outputs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Piezo_Vibration_Sensor/master/img/Grove-Piezo_Vibration_Sensor.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You can directly use a digital pin, take D5 of base shield as an example, and connect LED to Pin 12.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const int ledPin=12;
void setup() {
    Serial.begin(9600);
    pinMode(ledPin,OUTPUT);
}

void loop() {
    int sensorState = digitalRead(5);
    Serial.println(sensorState);
    delay(1000);
    if(sensorState == HIGH)
    {
        digitalWrite(ledPin,HIGH);
    }
    else
    {
        digitalWrite(ledPin,LOW);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;with-raspberry-pi&#34;&gt;With Raspberry Pi&lt;/h3&gt;

&lt;p&gt;1.You should have a raspberry pi and a grovepi or grovepi+.&lt;/p&gt;

&lt;p&gt;2.You should have completed configuring the development enviroment, otherwise follow &lt;a href=&#34;http://wiki.seeed.cc/GrovePiPlus&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;3.Connection&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Plug the sensor to grovepi socket A0 by using a grove cable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.Navigate to the demos&amp;rsquo; directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    cd yourpath/GrovePi/Software/Python/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To see the code&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nano grove_piezo_vibration_sensor.py   # &amp;quot;Ctrl+x&amp;quot; to exit #
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;import time
import grovepi

# Connect the Grove Piezo Vibration Sensor to analog port A0
# OUT,NC,VCC,GND
piezo = 0

grovepi.pinMode(piezo,&amp;quot;INPUT&amp;quot;)

while True:
    try:
        # When vibration is detected, the sensor outputs a logic high signal
        print grovepi.analogRead(piezo)
        time.sleep(.5)

    except IOError:
        print &amp;quot;Error&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;5.Run the demo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo python grove_piezo_vibration_sensor.py
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Piezo_Vibration_Sensor/master/res/Eagle.zip&#34;&gt;Grove - Piezo Vibration Sensor Eagle File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Piezo_Vibration_Sensor/master/res/Gvove-Piezo_Vibration_Sensor.pdf&#34;&gt;Grove - Piezo Vibration Sensor PDF File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://raw.githubusercontent.com/SeeedDocument/Grove-Piezo_Vibration_Sensor/master/res/Piezo_Vibration_Sensor.pdf&#34;&gt;Piezo Vibration Sensor Datasheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- This Markdown file was created from http://www.seeedstudio.com/wiki/Grove_-_Piezo_Vibration_Sensor --&gt;
</description>
    </item>
    
  </channel>
</rss>